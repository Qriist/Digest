;complete
Digest_Bin_110f_skills(BinToDecompile)
{
	global
	Bin := FileOpen(BinToDecompile,"r")
	Bin.Seek(4)
	RecordSize := 572

	loop, % (Bin.Length  - 4) / RecordSize
	{
		If ( (A_TickCount - StartTime) >= 10 ) OR (a_index=1)
		{
			GuiControl, , Text3, % "Decoding Bins...`n" Module " ( " ModuleNum " / " Binorder.Length() " )" "`nRecord: " a_index "/" ((StrSplit((Bin.Length  - 4)  / RecordSize,"`.")[1])) " ("  StrSplit(a_index/ ((Bin.Length  - 4)  / RecordSize) * 100,"`.")[1] "%)"
			StartTime := A_TickCount
		} 
		;Record size: 572
		;BITFIELDS ARE PRESENT!
		RecordID := a_index-1
		Record := Digest[ModFullName,"Decompile",Module,RecordID] := {}
		Record["Id"] := Bin.ReadUInt() 
		Record["BitCombined"] := Bin.ReadUInt() 
		Record["BitCombined2"] := Bin.ReadUInt() 
		
		;Start bitfield operations
		Flags := Record["BitCombined"] Record["BitCombined2"]
		Record["interrupt"] := substr(Flags,1,1) 
		Record["leftskill"] := substr(Flags,2,1) 
		Record["ItemTgtDo"] := substr(Flags,3,1) 
		Record["AttackNoMana"] := substr(Flags,4,1) 
		Record["TargetItem"] := substr(Flags,5,1) 
		Record["TargetAlly"] := substr(Flags,6,1) 
		Record["TargetPet"] := substr(Flags,7,1) 
		Record["TargetCorpse"] := substr(Flags,8,1) 
		Record["SearchOpenXY"] := substr(Flags,9,1) 
		Record["SearchEnemyNear"] := substr(Flags,10,1) 
		Record["SearchEnemyXY"] := substr(Flags,11,1) 
		Record["TargetableOnly"] := substr(Flags,12,1) 
		Record["UseAttackRate"] := substr(Flags,13,1) 
		Record["durability"] := substr(Flags,14,1) 
		Record["enhanceable"] := substr(Flags,15,1) 
		Record["noammo"] := substr(Flags,16,1) 
		Record["immediate"] := substr(Flags,17,1) 
		Record["weaponsnd"] := substr(Flags,18,1) 
		Record["stsounddelay"] := substr(Flags,19,1) 
		Record["stsuccessonly"] := substr(Flags,20,1) 
		Record["repeat"] := substr(Flags,21,1) 
		Record["InGame"] := substr(Flags,22,1) 
		Record["Kick"] := substr(Flags,23,1) 
		Record["InTown"] := substr(Flags,24,1) 
		Record["prgstack"] := substr(Flags,25,1) 
		Record["periodic"] := substr(Flags,26,1) 
		Record["aura"] := substr(Flags,27,1) 
		Record["passive"] := substr(Flags,28,1) 
		Record["finishing"] := substr(Flags,29,1) 
		Record["progressive"] := substr(Flags,30,1) 
		Record["lob"] := substr(Flags,31,1) 
		Record["decquant"] := substr(Flags,32,1) 
		Record["iPadding2"] := substr(Flags,57,25) 
		Record["warp"] := substr(Flags,58,1) 
		Record["usemanaondo"] := substr(Flags,59,1) 
		Record["scroll"] := substr(Flags,60,1) 
		Record["general"] := substr(Flags,61,1) 
		Record["ItemCltCheckStart"] := substr(Flags,62,1) 
		Record["ItemCheckStart"] := substr(Flags,63,1) 
		Record["TgtPlaceCheck"] := substr(Flags,64,1) 
		Record["charclass"] := Bin.ReadUChar() 
		Record["iPadding3_1"] := Bin.ReadUChar() 
		Record["iPadding3_2"] := Bin.ReadUChar() 
		Record["iPadding3_3"] := Bin.ReadUChar() 
		Record["anim"] := Bin.ReadUChar() 
		Record["monanim"] := Bin.ReadUChar() 
		Record["seqtrans"] := Bin.ReadUChar() 
		Record["seqnum"] := Bin.ReadUChar() 
		Record["range"] := Bin.ReadUChar() 
		Record["SelectProc"] := Bin.ReadUChar() 
		Record["seqinput"] := Bin.ReadUShort() 
		Record["itypea1"] := Bin.ReadUShort() 
		Record["itypea2"] := Bin.ReadUShort() 
		Record["itypea3"] := Bin.ReadUShort() 
		Record["itypeb1"] := Bin.ReadUShort() 
		Record["itypeb2"] := Bin.ReadUShort() 
		Record["itypeb3"] := Bin.ReadUShort() 
		Record["etypea1"] := Bin.ReadUShort() 
		Record["etypea2"] := Bin.ReadUShort() 
		Record["etypeb1"] := Bin.ReadUShort() 
		Record["etypeb2"] := Bin.ReadUShort() 
		Record["srvstfunc"] := Bin.ReadUShort() 
		Record["srvdofunc"] := Bin.ReadUShort() 
		Record["srvprgfunc1"] := Bin.ReadUShort() 
		Record["srvprgfunc2"] := Bin.ReadUShort() 
		Record["srvprgfunc3"] := Bin.ReadUShort() 
		Record["iPadding13"] := Bin.ReadUShort() 
		Record["prgcalc1"] := Bin.ReadUInt() 
		Record["prgcalc2"] := Bin.ReadUInt() 
		Record["prgcalc3"] := Bin.ReadUInt() 
		Record["prgdam"] := Bin.ReadUShort() 
		Record["srvmissile"] := Bin.ReadUShort() 
		Record["srvmissilea"] := Bin.ReadUShort() 
		Record["srvmissileb"] := Bin.ReadUShort() 
		Record["srvmissilec"] := Bin.ReadUShort() 
		Record["srvoverlay"] := Bin.ReadUShort() 
		Record["aurafilter"] := Bin.ReadUInt() 
		Record["aurastat1"] := Bin.ReadUShort() 
		Record["aurastat2"] := Bin.ReadUShort() 
		Record["aurastat3"] := Bin.ReadUShort() 
		Record["aurastat4"] := Bin.ReadUShort() 
		Record["aurastat5"] := Bin.ReadUShort() 
		Record["aurastat6"] := Bin.ReadUShort() 
		Record["auralencalc"] := Bin.ReadUInt() 
		Record["aurarangecalc"] := Bin.ReadUInt() 
		Record["aurastatcalc1"] := Bin.ReadUInt() 
		Record["aurastatcalc2"] := Bin.ReadUInt() 
		Record["aurastatcalc3"] := Bin.ReadUInt() 
		Record["aurastatcalc4"] := Bin.ReadUInt() 
		Record["aurastatcalc5"] := Bin.ReadUInt() 
		Record["aurastatcalc6"] := Bin.ReadUInt() 
		Record["aurastate"] := Bin.ReadUShort() 
		Record["auratargetstate"] := Bin.ReadUShort() 
		Record["auraevent1"] := Bin.ReadUShort() 
		Record["auraevent2"] := Bin.ReadUShort() 
		Record["auraevent3"] := Bin.ReadUShort() 
		Record["auraeventfunc1"] := Bin.ReadUShort() 
		Record["auraeventfunc2"] := Bin.ReadUShort() 
		Record["auraeventfunc3"] := Bin.ReadUShort() 
		Record["auratgtevent"] := Bin.ReadUShort() 
		Record["auratgteventfunc"] := Bin.ReadUShort() 
		Record["passivestate"] := Bin.ReadUShort() 
		Record["passiveitype"] := Bin.ReadUShort() 
		Record["passivestat1"] := Bin.ReadUShort() 
		Record["passivestat2"] := Bin.ReadUShort() 
		Record["passivestat3"] := Bin.ReadUShort() 
		Record["passivestat4"] := Bin.ReadUShort() 
		Record["passivestat5"] := Bin.ReadUShort() 
		Record["iPadding40"] := Bin.ReadUShort() 
		Record["passivecalc1"] := Bin.ReadUInt() 
		Record["passivecalc2"] := Bin.ReadUInt() 
		Record["passivecalc3"] := Bin.ReadUInt() 
		Record["passivecalc4"] := Bin.ReadUInt() 
		Record["passivecalc5"] := Bin.ReadUInt() 
		Record["passiveevent"] := Bin.ReadUShort() 
		Record["passiveeventfunc"] := Bin.ReadUShort() 
		Record["summon"] := Bin.ReadUShort() 
		Record["pettype"] := Bin.ReadUChar() 
		Record["summode"] := Bin.ReadUChar() 
		Record["petmax"] := Bin.ReadUInt() 
		Record["sumskill1"] := Bin.ReadUShort() 
		Record["sumskill2"] := Bin.ReadUShort() 
		Record["sumskill3"] := Bin.ReadUShort() 
		Record["sumskill4"] := Bin.ReadUShort() 
		Record["sumskill5"] := Bin.ReadUShort() 
		Record["iPadding51"] := Bin.ReadUShort() 
		Record["sumsk1calc"] := Bin.ReadUInt() 
		Record["sumsk2calc"] := Bin.ReadUInt() 
		Record["sumsk3calc"] := Bin.ReadUInt() 
		Record["sumsk4calc"] := Bin.ReadUInt() 
		Record["sumsk5calc"] := Bin.ReadUInt() 
		Record["sumumod"] := Bin.ReadUShort() 
		Record["sumoverlay"] := Bin.ReadUShort() 
		Record["cltmissile"] := Bin.ReadUShort() 
		Record["cltmissilea"] := Bin.ReadUShort() 
		Record["cltmissileb"] := Bin.ReadUShort() 
		Record["cltmissilec"] := Bin.ReadUShort() 
		Record["cltmissiled"] := Bin.ReadUShort() 
		Record["cltstfunc"] := Bin.ReadUShort() 
		Record["cltdofunc"] := Bin.ReadUShort() 
		Record["cltprgfunc1"] := Bin.ReadUShort() 
		Record["cltprgfunc2"] := Bin.ReadUShort() 
		Record["cltprgfunc3"] := Bin.ReadUShort() 
		Record["stsound"] := Bin.ReadUShort() 
		Record["stsoundclass"] := Bin.ReadUShort() 
		Record["dosound"] := Bin.ReadUShort() 
		Record["dosound a"] := Bin.ReadUShort() 
		Record["dosound b"] := Bin.ReadUShort() 
		Record["castoverlay"] := Bin.ReadUShort() 
		Record["tgtoverlay"] := Bin.ReadUShort() 
		Record["tgtsound"] := Bin.ReadUShort() 
		Record["prgoverlay"] := Bin.ReadUShort() 
		Record["prgsound"] := Bin.ReadUShort() 
		Record["cltoverlaya"] := Bin.ReadUShort() 
		Record["cltoverlayb"] := Bin.ReadUShort() 
		Record["cltcalc1"] := Bin.ReadUInt() 
		Record["cltcalc2"] := Bin.ReadUInt() 
		Record["cltcalc3"] := Bin.ReadUInt() 
		Record["ItemTarget"] := Bin.ReadUChar() 
		Record["iPadding72"] := Bin.ReadUChar() 
		Record["ItemCastSound"] := Bin.ReadUShort() 
		Record["ItemCastOverlay"] := Bin.ReadUShort() 
		Record["iPadding73"] := Bin.ReadUShort() 
		Record["perdelay"] := Bin.ReadUInt() 
		Record["maxlvl"] := Bin.ReadUShort() 
		Record["ResultFlags"] := Bin.ReadUShort() 
		Record["HitFlags"] := Bin.ReadUInt() 
		Record["HitClass"] := Bin.ReadUInt() 
		Record["calc1"] := Bin.ReadUInt() 
		Record["calc2"] := Bin.ReadUInt() 
		Record["calc3"] := Bin.ReadUInt() 
		Record["calc4"] := Bin.ReadUInt() 
		Record["Param1"] := Bin.ReadInt() 
		Record["Param2"] := Bin.ReadInt() 
		Record["Param3"] := Bin.ReadInt() 
		Record["Param4"] := Bin.ReadInt() 
		Record["Param5"] := Bin.ReadInt() 
		Record["Param6"] := Bin.ReadInt() 
		Record["Param7"] := Bin.ReadInt() 
		Record["Param8"] := Bin.ReadInt() 
		Record["weapsel"] := Bin.ReadUShort() 
		Record["ItemEffect"] := Bin.ReadUShort() 
		Record["ItemCltEffect"] := Bin.ReadUShort() 
		Record["iPadding91"] := Bin.ReadUShort() 
		Record["skpoints"] := Bin.ReadUInt() 
		Record["reqlevel"] := Bin.ReadUShort() 
		Record["reqstr"] := Bin.ReadUShort() 
		Record["reqdex"] := Bin.ReadUShort() 
		Record["reqint"] := Bin.ReadUShort() 
		Record["reqvit"] := Bin.ReadUShort() 
		Record["reqskill1"] := Bin.ReadUShort() 
		Record["reqskill2"] := Bin.ReadUShort() 
		Record["reqskill3"] := Bin.ReadUShort() 
		Record["startmana"] := Bin.ReadUShort() 
		Record["minmana"] := Bin.ReadUShort() 
		Record["manashift"] := Bin.ReadUShort() 
		Record["mana"] := Bin.ReadUShort() 
		Record["lvlmana"] := Bin.ReadShort() 
		Record["attackrank"] := Bin.ReadUChar() 
		Record["LineOfSight"] := Bin.ReadUChar() 
		Record["delay"] := Bin.ReadUInt() 
		Record["skilldesc"] := Bin.ReadUShort() 
		Record["iPadding101"] := Bin.ReadUShort() 
		Record["ToHit"] := Bin.ReadUInt() 
		Record["LevToHit"] := Bin.ReadUInt() 
		Record["ToHitCalc"] := Bin.ReadUInt() 
		Record["HitShift"] := Bin.ReadUChar() 
		Record["SrcDam"] := Bin.ReadUChar() 
		Record["iPadding105"] := Bin.ReadUShort() 
		Record["MinDam"] := Bin.ReadUInt() 
		Record["MaxDam"] := Bin.ReadUInt() 
		Record["MinLevDam1"] := Bin.ReadUInt() 
		Record["MinLevDam2"] := Bin.ReadUInt() 
		Record["MinLevDam3"] := Bin.ReadUInt() 
		Record["MinLevDam4"] := Bin.ReadUInt() 
		Record["MinLevDam5"] := Bin.ReadUInt() 
		Record["MaxLevDam1"] := Bin.ReadUInt() 
		Record["MaxLevDam2"] := Bin.ReadUInt() 
		Record["MaxLevDam3"] := Bin.ReadUInt() 
		Record["MaxLevDam4"] := Bin.ReadUInt() 
		Record["MaxLevDam5"] := Bin.ReadUInt() 
		Record["DmgSymPerCalc"] := Bin.ReadUInt() 
		Record["EType"] := Bin.ReadUShort() 
		Record["iPadding119"] := Bin.ReadUShort() 
		Record["EMin"] := Bin.ReadUInt() 
		Record["EMax"] := Bin.ReadUInt() 
		Record["EMinLev1"] := Bin.ReadUInt() 
		Record["EMinLev2"] := Bin.ReadUInt() 
		Record["EMinLev3"] := Bin.ReadUInt() 
		Record["EMinLev4"] := Bin.ReadUInt() 
		Record["EMinLev5"] := Bin.ReadUInt() 
		Record["EMaxLev1"] := Bin.ReadUInt() 
		Record["EMaxLev2"] := Bin.ReadUInt() 
		Record["EMaxLev3"] := Bin.ReadUInt() 
		Record["EMaxLev4"] := Bin.ReadUInt() 
		Record["EMaxLev5"] := Bin.ReadUInt() 
		Record["EDmgSymPerCalc"] := Bin.ReadUInt() 
		Record["ELen"] := Bin.ReadUInt() 
		Record["ELevLen1"] := Bin.ReadUInt() 
		Record["ELevLen2"] := Bin.ReadUInt() 
		Record["ELevLen3"] := Bin.ReadUInt() 
		Record["ELenSymPerCalc"] := Bin.ReadUInt() 
		Record["restrict"] := Bin.ReadUShort() 
		Record["State1"] := Bin.ReadUShort() 
		Record["State2"] := Bin.ReadUShort() 
		Record["State3"] := Bin.ReadUShort() 
		Record["aitype"] := Bin.ReadUShort() 
		Record["aibonus"] := Bin.ReadShort() 
		Record["cost mult"] := Bin.ReadUInt() 
		Record["cost add"] := Bin.ReadUInt()
		
		if a_index = 1
		{
			For k,v in Record
				Digest[ModFullName,"Keys","Decompile",Module] .= k ","
			Digest[ModFullName,"Keys","Decompile",Module] := RTrim(Digest[ModFullName,"Keys","Decompile",Module],",")
		}
		
		Kill=iPadding|119,auraeventfunc|3,auratgteventfunc,cltprgfunc|3,dosound,dosound a,dosound b,ELevLen1|3,EMax,EMaxLev|5,EMin,EMinLev|5,etypea|2,etypeb|2,itypea|3,itypeb|3,MaxDam,MaxLevDam|5,MinDam,MinLevDam|5,Param|8,srvprgfunc|3
		RecordKill(Record,kill,0)
		
		Kill=auraevent|3,aurastat|6,aurastate,auratargetstate,auratgtevent,castoverlay,cltmissile,cltmissilea,cltmissileb,cltmissilec,cltmissiled,cltoverlaya,cltoverlayb,ItemCastOverlay,passiveevent,passivestat|5,passivestate,prgoverlay,reqskill|3,srvmissile,srvmissilea,srvmissileb,srvmissilec,srvoverlay,State|3,summon,sumoverlay,sumskill|5,tgtoverlay
		RecordKill(Record,Kill,65535)
		
		Kill=auralencalc,aurarangecalc,aurastatcalc|6,calc|4,cltcalc|3,delay,DmgSymPerCalc,EDmgSymPerCalc,ELenSymPerCalc,passivecalc|5,perdelay,petmax,prgcalc|3,skpoints,ToHitCalc
		RecordKill(Record,Kill,4294967295)
		
		kill=sumsk$calc|5
		RecordKill(Record,Kill,4294967295,,,"$")
		For k,v in Record
		{
			KeyCounter += 1
			KeySize += StrLen(v)
		}
		
	}
}