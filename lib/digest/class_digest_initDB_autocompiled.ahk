	pushDB = 
	(
		CREATE TABLE [Decompile | arena] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Suicide]	INTEGER,
			[PlayerKill]	INTEGER,
			[PlayerKillPercent]	INTEGER,
			[MonsterKill]	INTEGER,
			[PlayerDeath]	INTEGER,
			[PlayerDeathPercent]	INTEGER,
			[MonsterDeath]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | armor] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[flippyfile]	STRING (32),
			[invfile]	STRING (32),
			[uniqueinvfile]	STRING (32),
			[setinvfile]	STRING (32),
			[code]	STRING (4),
			[normcode]	STRING (4),
			[ubercode]	STRING (4),
			[ultracode]	STRING (4),
			[alternategfx]	STRING (4),
			[iPadding37]	INTEGER,
			[iPadding38]	INTEGER,
			[iPadding39]	INTEGER,
			[iPadding40]	INTEGER,
			[iPadding41]	INTEGER,
			[iPadding42]	INTEGER,
			[iPadding43]	INTEGER,
			[iPadding44]	INTEGER,
			[iPadding45]	INTEGER,
			[iPadding46]	INTEGER,
			[iPadding47]	INTEGER,
			[iPadding48]	INTEGER,
			[iPadding49]	INTEGER,
			[iPadding50]	INTEGER,
			[minac]	INTEGER,
			[maxac]	INTEGER,
			[gamble cost]	INTEGER,
			[speed]	INTEGER,
			[bitfield1]	INTEGER,
			[cost]	INTEGER,
			[minstack]	INTEGER,
			[maxstack]	INTEGER,
			[iPadding59]	INTEGER,
			[gemoffset]	INTEGER,
			[namestr]	INTEGER,
			[version]	INTEGER,
			[iPadding61]	INTEGER,
			[auto prefix]	INTEGER,
			[missiletype]	INTEGER,
			[rarity]	INTEGER,
			[level]	INTEGER,
			[mindam]	INTEGER,
			[maxdam]	INTEGER,
			[iPadding64]	INTEGER,
			[iPadding65]	INTEGER,
			[StrBonus]	INTEGER,
			[DexBonus]	INTEGER,
			[reqstr]	INTEGER,
			[reqdex]	INTEGER,
			[absorbs]	INTEGER,
			[invwidth]	INTEGER,
			[invheight]	INTEGER,
			[block]	INTEGER,
			[durability]	INTEGER,
			[nodurability]	INTEGER,
			[iPadding69]	INTEGER,
			[component]	INTEGER,
			[rArm]	INTEGER,
			[lArm]	INTEGER,
			[Torso]	INTEGER,
			[Legs]	INTEGER,
			[rSPad]	INTEGER,
			[lSPad]	INTEGER,
			[iPadding71]	INTEGER,
			[useable]	INTEGER,
			[type]	INTEGER,
			[type2]	INTEGER,
			[iPadding72]	INTEGER,
			[dropsound]	INTEGER,
			[usesound]	INTEGER,
			[dropsfxframe]	INTEGER,
			[unique]	INTEGER,
			[quest]	INTEGER,
			[transparent]	INTEGER,
			[transtbl]	INTEGER,
			[iPadding75]	INTEGER,
			[lightradius]	INTEGER,
			[belt]	INTEGER,
			[stackable]	INTEGER,
			[spawnable]	INTEGER,
			[iPadding77]	INTEGER,
			[durwarning]	INTEGER,
			[qntwarning]	INTEGER,
			[hasinv]	INTEGER,
			[gemsockets]	INTEGER,
			[iPadding78]	STRING (3),
			[iPadding79]	STRING (2),
			[gemapplytype]	INTEGER,
			[levelreq]	INTEGER,
			[magic lvl]	INTEGER,
			[Transform]	INTEGER,
			[InvTrans]	INTEGER,
			[compactsave]	INTEGER,
			[SkipName]	INTEGER,
			[nameable]	INTEGER,
			[AkaraMin]	INTEGER,
			[GheedMin]	INTEGER,
			[CharsiMin]	INTEGER,
			[FaraMin]	INTEGER,
			[LysanderMin]	INTEGER,
			[DrognanMin]	INTEGER,
			[HraltiMin]	INTEGER,
			[AlkorMin]	INTEGER,
			[OrmusMin]	INTEGER,
			[ElzixMin]	INTEGER,
			[AshearaMin]	INTEGER,
			[CainMin]	INTEGER,
			[HalbuMin]	INTEGER,
			[JamellaMin]	INTEGER,
			[MalahMin]	INTEGER,
			[LarzukMin]	INTEGER,
			[DrehyaMin]	INTEGER,
			[AkaraMax]	INTEGER,
			[GheedMax]	INTEGER,
			[CharsiMax]	INTEGER,
			[FaraMax]	INTEGER,
			[LysanderMax]	INTEGER,
			[DrognanMax]	INTEGER,
			[HraltiMax]	INTEGER,
			[AlkorMax]	INTEGER,
			[OrmusMax]	INTEGER,
			[ElzixMax]	INTEGER,
			[AshearaMax]	INTEGER,
			[CainMax]	INTEGER,
			[HalbuMax]	INTEGER,
			[JamellaMax]	INTEGER,
			[MalahMax]	INTEGER,
			[LarzukMax]	INTEGER,
			[DrehyaMax]	INTEGER,
			[AkaraMagicMin]	INTEGER,
			[GheedMagicMin]	INTEGER,
			[CharsiMagicMin]	INTEGER,
			[FaraMagicMin]	INTEGER,
			[LysanderMagicMin]	INTEGER,
			[DrognanMagicMin]	INTEGER,
			[HraltiMagicMin]	INTEGER,
			[AlkorMagicMin]	INTEGER,
			[OrmusMagicMin]	INTEGER,
			[ElzixMagicMin]	INTEGER,
			[AshearaMagicMin]	INTEGER,
			[CainMagicMin]	INTEGER,
			[HalbuMagicMin]	INTEGER,
			[JamellaMagicMin]	INTEGER,
			[MalahMagicMin]	INTEGER,
			[LarzukMagicMin]	INTEGER,
			[DrehyaMagicMin]	INTEGER,
			[AkaraMagicMax]	INTEGER,
			[GheedMagicMax]	INTEGER,
			[CharsiMagicMax]	INTEGER,
			[FaraMagicMax]	INTEGER,
			[LysanderMagicMax]	INTEGER,
			[DrognanMagicMax]	INTEGER,
			[HraltiMagicMax]	INTEGER,
			[AlkorMagicMax]	INTEGER,
			[OrmusMagicMax]	INTEGER,
			[ElzixMagicMax]	INTEGER,
			[AshearaMagicMax]	INTEGER,
			[CainMagicMax]	INTEGER,
			[HalbuMagicMax]	INTEGER,
			[JamellaMagicMax]	INTEGER,
			[MalahMagicMax]	INTEGER,
			[LarzukMagicMax]	INTEGER,
			[DrehyaMagicMax]	INTEGER,
			[AkaraMagicLvl]	INTEGER,
			[GheedMagicLvl]	INTEGER,
			[CharsiMagicLvl]	INTEGER,
			[FaraMagicLvl]	INTEGER,
			[LysanderMagicLvl]	INTEGER,
			[DrognanMagicLvl]	INTEGER,
			[HraltiMagicLvl]	INTEGER,
			[AlkorMagicLvl]	INTEGER,
			[OrmusMagicLvl]	INTEGER,
			[ElzixMagicLvl]	INTEGER,
			[AshearaMagicLvl]	INTEGER,
			[CainMagicLvl]	INTEGER,
			[HalbuMagicLvl]	INTEGER,
			[JamellaMagicLvl]	INTEGER,
			[MalahMagicLvl]	INTEGER,
			[LarzukMagicLvl]	INTEGER,
			[DrehyaMagicLvl]	INTEGER,
			[iPadding102]	INTEGER,
			[NightmareUpgrade]	STRING (4),
			[HellUpgrade]	STRING (4),
			[iPadding105]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | armtype] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[Token]	STRING (20)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | automagic] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[TblIndex]	INTEGER,
			[version]	INTEGER,
			[mod1code]	INTEGER,
			[mod1param]	INTEGER,
			[mod1min]	INTEGER,
			[mod1max]	INTEGER,
			[mod2code]	INTEGER,
			[mod2param]	INTEGER,
			[mod2min]	INTEGER,
			[mod2max]	INTEGER,
			[mod3code]	INTEGER,
			[mod3param]	INTEGER,
			[mod3min]	INTEGER,
			[mod3max]	INTEGER,
			[spawnable]	INTEGER,
			[iPadding21]	INTEGER,
			[transformcolor]	INTEGER,
			[level]	INTEGER,
			[group]	INTEGER,
			[maxlevel]	INTEGER,
			[rare]	INTEGER,
			[levelreq]	INTEGER,
			[classspecific]	INTEGER,
			[class]	INTEGER,
			[classlevelreq]	INTEGER,
			[itype1]	INTEGER,
			[itype2]	INTEGER,
			[itype3]	INTEGER,
			[itype4]	INTEGER,
			[itype5]	INTEGER,
			[itype6]	INTEGER,
			[itype7]	INTEGER,
			[etype1]	INTEGER,
			[etype2]	INTEGER,
			[etype3]	INTEGER,
			[etype4]	INTEGER,
			[etype5]	INTEGER,
			[frequency]	INTEGER,
			[divide]	INTEGER,
			[multiply]	INTEGER,
			[add]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | automap] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[LevelName]	STRING (16),
			[TileName]	STRING (8),
			[Style]	INTEGER,
			[StartSequence]	INTEGER,
			[EndSequence]	INTEGER,
			[Padding6]	INTEGER,
			[Cel1]	INTEGER,
			[Cel2]	INTEGER,
			[Cel3]	INTEGER,
			[Cel4]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | belts] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Id]	INTEGER,
			[numboxes]	INTEGER,
			[box1left]	INTEGER,
			[box1right]	INTEGER,
			[box1top]	INTEGER,
			[box1bottom]	INTEGER,
			[box2left]	INTEGER,
			[box2right]	INTEGER,
			[box2top]	INTEGER,
			[box2bottom]	INTEGER,
			[box3left]	INTEGER,
			[box3right]	INTEGER,
			[box3top]	INTEGER,
			[box3bottom]	INTEGER,
			[box4left]	INTEGER,
			[box4right]	INTEGER,
			[box4top]	INTEGER,
			[box4bottom]	INTEGER,
			[box5left]	INTEGER,
			[box5right]	INTEGER,
			[box5top]	INTEGER,
			[box5bottom]	INTEGER,
			[box6left]	INTEGER,
			[box6right]	INTEGER,
			[box6top]	INTEGER,
			[box6bottom]	INTEGER,
			[box7left]	INTEGER,
			[box7right]	INTEGER,
			[box7top]	INTEGER,
			[box7bottom]	INTEGER,
			[box8left]	INTEGER,
			[box8right]	INTEGER,
			[box8top]	INTEGER,
			[box8bottom]	INTEGER,
			[box9left]	INTEGER,
			[box9right]	INTEGER,
			[box9top]	INTEGER,
			[box9bottom]	INTEGER,
			[box10left]	INTEGER,
			[box10right]	INTEGER,
			[box10top]	INTEGER,
			[box10bottom]	INTEGER,
			[box11left]	INTEGER,
			[box11right]	INTEGER,
			[box11top]	INTEGER,
			[box11bottom]	INTEGER,
			[box12left]	INTEGER,
			[box12right]	INTEGER,
			[box12top]	INTEGER,
			[box12bottom]	INTEGER,
			[box13left]	INTEGER,
			[box13right]	INTEGER,
			[box13top]	INTEGER,
			[box13bottom]	INTEGER,
			[box14left]	INTEGER,
			[box14right]	INTEGER,
			[box14top]	INTEGER,
			[box14bottom]	INTEGER,
			[box15left]	INTEGER,
			[box15right]	INTEGER,
			[box15top]	INTEGER,
			[box15bottom]	INTEGER,
			[box16left]	INTEGER,
			[box16right]	INTEGER,
			[box16top]	INTEGER,
			[box16bottom]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | bodylocs] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[code]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | books] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	INTEGER,
			[SpellIcon]	INTEGER,
			[iPadding0]	INTEGER,
			[pSpell]	INTEGER,
			[ScrollSkill]	INTEGER,
			[BookSkill]	INTEGER,
			[BaseCost]	INTEGER,
			[CostPerCharge]	INTEGER,
			[ScrollSpellCode]	STRING (4),
			[BookSpellCode]	STRING (4)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | charstats] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[head]	STRING (32),
			[class]	STRING (16),
			[str]	INTEGER,
			[dex]	INTEGER,
			[int]	INTEGER,
			[vit]	INTEGER,
			[stamina]	INTEGER,
			[hpadd]	INTEGER,
			[PercentStr]	INTEGER,
			[PercentInt]	INTEGER,
			[PercentDex]	INTEGER,
			[PercentVit]	INTEGER,
			[ManaRegen]	INTEGER,
			[bUnknown]	INTEGER,
			[ToHitFactor]	INTEGER,
			[WalkVelocity]	INTEGER,
			[RunVelocity]	INTEGER,
			[RunDrain]	INTEGER,
			[LifePerLevel]	INTEGER,
			[StaminaPerLevel]	INTEGER,
			[ManaPerLevel]	INTEGER,
			[LifePerVitality]	INTEGER,
			[StaminaPerVitality]	INTEGER,
			[ManaPerMagic]	INTEGER,
			[BlockFactor]	INTEGER,
			[acPadding]	STRING (2),
			[baseWClass]	STRING (4),
			[StatPerLevel]	INTEGER,
			[iPadding1]	INTEGER,
			[StrAllSkills]	INTEGER,
			[StrSkillTab1]	INTEGER,
			[StrSkillTab2]	INTEGER,
			[StrSkillTab3]	INTEGER,
			[StrClassOnly]	INTEGER,
			[item1]	STRING (4),
			[item1loc]	INTEGER,
			[item1count]	INTEGER,
			[item1pad]	STRING (2),
			[item2]	STRING (4),
			[item2loc]	INTEGER,
			[item2count]	INTEGER,
			[item2pad]	STRING (2),
			[item3]	STRING (4),
			[item3loc]	INTEGER,
			[item3count]	INTEGER,
			[item3pad]	STRING (2),
			[item4]	STRING (4),
			[item4loc]	INTEGER,
			[item4count]	INTEGER,
			[item4pad]	STRING (2),
			[item5]	STRING (4),
			[item5loc]	INTEGER,
			[item5count]	INTEGER,
			[item5pad]	STRING (2),
			[item6]	STRING (4),
			[item6loc]	INTEGER,
			[item6count]	INTEGER,
			[item6pad]	STRING (2),
			[item7]	STRING (4),
			[item7loc]	INTEGER,
			[item7count]	INTEGER,
			[item7pad]	STRING (2),
			[item8]	STRING (4),
			[item8loc]	INTEGER,
			[item8count]	INTEGER,
			[item8pad]	STRING (2),
			[item9]	STRING (4),
			[item9loc]	INTEGER,
			[item9count]	INTEGER,
			[item9pad]	STRING (2),
			[item10]	STRING (4),
			[item10loc]	INTEGER,
			[item10count]	INTEGER,
			[item10pad]	STRING (2),
			[StartSkill]	INTEGER,
			[Skill 1]	INTEGER,
			[Skill 2]	INTEGER,
			[Skill 3]	INTEGER,
			[Skill 4]	INTEGER,
			[Skill 5]	INTEGER,
			[Skill 6]	INTEGER,
			[Skill 7]	INTEGER,
			[Skill 8]	INTEGER,
			[Skill 9]	INTEGER,
			[Skill 10]	INTEGER,
			[acTail]	STRING (2)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | chartemplate] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (30),
			[Class]	INTEGER,
			[Level]	INTEGER,
			[Act]	INTEGER,
			[str]	INTEGER,
			[dex]	INTEGER,
			[int]	INTEGER,
			[vit]	INTEGER,
			[Mana]	INTEGER,
			[Hitpoints]	INTEGER,
			[ManaRegenBonus]	INTEGER,
			[Velocity]	INTEGER,
			[AttackRate]	INTEGER,
			[OtherRate]	INTEGER,
			[RightSkill]	INTEGER,
			[Skill2]	INTEGER,
			[Skill3]	INTEGER,
			[Skill4]	INTEGER,
			[Skill5]	INTEGER,
			[Skill6]	INTEGER,
			[Skill7]	INTEGER,
			[Skill8]	INTEGER,
			[Skill9]	INTEGER,
			[SkillLevel1]	INTEGER,
			[SkillLevel2]	INTEGER,
			[SkillLevel3]	INTEGER,
			[SkillLevel4]	INTEGER,
			[SkillLevel5]	INTEGER,
			[SkillLevel6]	INTEGER,
			[SkillLevel7]	INTEGER,
			[SkillLevel8]	INTEGER,
			[SkillLevel9]	INTEGER,
			[item1]	STRING (4),
			[item1loc]	INTEGER,
			[item1count]	INTEGER,
			[item1pad]	INTEGER,
			[item2]	STRING (4),
			[item2loc]	INTEGER,
			[item2count]	INTEGER,
			[item2pad]	INTEGER,
			[item3]	STRING (4),
			[item3loc]	INTEGER,
			[item3count]	INTEGER,
			[item3pad]	INTEGER,
			[item4]	STRING (4),
			[item4loc]	INTEGER,
			[item4count]	INTEGER,
			[item4pad]	INTEGER,
			[item5]	STRING (4),
			[item5loc]	INTEGER,
			[item5count]	INTEGER,
			[item5pad]	INTEGER,
			[item6]	STRING (4),
			[item6loc]	INTEGER,
			[item6count]	INTEGER,
			[item6pad]	INTEGER,
			[item7]	STRING (4),
			[item7loc]	INTEGER,
			[item7count]	INTEGER,
			[item7pad]	INTEGER,
			[item8]	STRING (4),
			[item8loc]	INTEGER,
			[item8count]	INTEGER,
			[item8pad]	INTEGER,
			[item9]	STRING (4),
			[item9loc]	INTEGER,
			[item9count]	INTEGER,
			[item9pad]	INTEGER,
			[item10]	STRING (4),
			[item10loc]	INTEGER,
			[item10count]	INTEGER,
			[item10pad]	INTEGER,
			[item11]	STRING (4),
			[item11loc]	INTEGER,
			[item11count]	INTEGER,
			[item11pad]	INTEGER,
			[item12]	STRING (4),
			[item12loc]	INTEGER,
			[item12count]	INTEGER,
			[item12pad]	INTEGER,
			[item13]	STRING (4),
			[item13loc]	INTEGER,
			[item13count]	INTEGER,
			[item13pad]	INTEGER,
			[item14]	STRING (4),
			[item14loc]	INTEGER,
			[item14count]	INTEGER,
			[item14pad]	INTEGER,
			[item15]	STRING (4),
			[item15loc]	INTEGER,
			[item15count]	INTEGER,
			[item15pad]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | colors] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[code]	STRING (4)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | compcode] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[code]	STRING (4)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | composit] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[Token]	STRING (20)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | difficultylevels] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[ResistPenalty]	INTEGER,
			[DeathExpPenalty]	INTEGER,
			[UberCodeOddsNormal]	INTEGER,
			[UberCodeOddsGood]	INTEGER,
			[MonsterSkillBonus]	INTEGER,
			[MonsterFreezeDivisor]	INTEGER,
			[MonsterColdDivisor]	INTEGER,
			[AiCurseDivisor]	INTEGER,
			[UltraCodeOddsNormal]	INTEGER,
			[UltraCodeOddsGood]	INTEGER,
			[LifeStealDivisor]	INTEGER,
			[ManaStealDivisor]	INTEGER,
			[UniqueDamageBonus]	INTEGER,
			[ChampionDamageBonus]	INTEGER,
			[HireableBossDamagePercent]	INTEGER,
			[MonsterCEDamagePercent]	INTEGER,
			[StaticFieldMin]	INTEGER,
			[GambleRare]	INTEGER,
			[GambleSet]	INTEGER,
			[GambleUnique]	INTEGER,
			[GambleUber]	INTEGER,
			[GambleUltra]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | elemtypes] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[code]	STRING (4)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | events] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[event]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | experience] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Amazon]	INTEGER,
			[Sorceress]	INTEGER,
			[Necromancer]	INTEGER,
			[Paladin]	INTEGER,
			[Barbarian]	INTEGER,
			[Druid]	INTEGER,
			[Assassin]	INTEGER,
			[ExpRatio]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | gems] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[name]	STRING (32),
			[letter]	STRING (8),
			[code]	INTEGER,
			[iPadding11]	INTEGER,
			[nummods]	INTEGER,
			[transform]	INTEGER,
			[weaponMod1Code]	INTEGER,
			[weaponMod1Param]	INTEGER,
			[weaponMod1Min]	INTEGER,
			[weaponMod1Max]	INTEGER,
			[weaponMod2Code]	INTEGER,
			[weaponMod2Param]	INTEGER,
			[weaponMod2Min]	INTEGER,
			[weaponMod2Max]	INTEGER,
			[weaponMod3Code]	INTEGER,
			[weaponMod3Param]	INTEGER,
			[weaponMod3Min]	INTEGER,
			[weaponMod3Max]	INTEGER,
			[helmMod1Code]	INTEGER,
			[helmMod1Param]	INTEGER,
			[helmMod1Min]	INTEGER,
			[helmMod1Max]	INTEGER,
			[helmMod2Code]	INTEGER,
			[helmMod2Param]	INTEGER,
			[helmMod2Min]	INTEGER,
			[helmMod2Max]	INTEGER,
			[helmMod3Code]	INTEGER,
			[helmMod3Param]	INTEGER,
			[helmMod3Min]	INTEGER,
			[helmMod3Max]	INTEGER,
			[shieldMod1Code]	INTEGER,
			[shieldMod1Param]	INTEGER,
			[shieldMod1Min]	INTEGER,
			[shieldMod1Max]	INTEGER,
			[shieldMod2Code]	INTEGER,
			[shieldMod2Param]	INTEGER,
			[shieldMod2Min]	INTEGER,
			[shieldMod2Max]	INTEGER,
			[shieldMod3Code]	INTEGER,
			[shieldMod3Param]	INTEGER,
			[shieldMod3Min]	INTEGER,
			[shieldMod3Max]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | hireling] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Version]	INTEGER,
			[Id]	INTEGER,
			[Class]	INTEGER,
			[Act]	INTEGER,
			[Difficulty]	INTEGER,
			[Seller]	INTEGER,
			[Gold]	INTEGER,
			[Level]	INTEGER,
			[Exp/Lvl]	INTEGER,
			[HP]	INTEGER,
			[HP/Lvl]	INTEGER,
			[Defense]	INTEGER,
			[Def/Lvl]	INTEGER,
			[Str]	INTEGER,
			[Str/Lvl]	INTEGER,
			[Dex]	INTEGER,
			[Dex/Lvl]	INTEGER,
			[AR]	INTEGER,
			[AR/Lvl]	INTEGER,
			[Share]	INTEGER,
			[Dmg-Min]	INTEGER,
			[Dmg-Max]	INTEGER,
			[Dmg/Lvl]	INTEGER,
			[Resist]	INTEGER,
			[Resist/Lvl]	INTEGER,
			[DefaultChance]	INTEGER,
			[Head]	INTEGER,
			[Torso]	INTEGER,
			[Weapon]	INTEGER,
			[Shield]	INTEGER,
			[Skill1]	INTEGER,
			[Skill2]	INTEGER,
			[Skill3]	INTEGER,
			[Skill4]	INTEGER,
			[Skill5]	INTEGER,
			[Skill6]	INTEGER,
			[Chance1]	INTEGER,
			[Chance2]	INTEGER,
			[Chance3]	INTEGER,
			[Chance4]	INTEGER,
			[Chance5]	INTEGER,
			[Chance6]	INTEGER,
			[ChancePerLvl1]	INTEGER,
			[ChancePerLvl2]	INTEGER,
			[ChancePerLvl3]	INTEGER,
			[ChancePerLvl4]	INTEGER,
			[ChancePerLvl5]	INTEGER,
			[ChancePerLvl6]	INTEGER,
			[Mode1]	INTEGER,
			[Mode2]	INTEGER,
			[Mode3]	INTEGER,
			[Mode4]	INTEGER,
			[Mode5]	INTEGER,
			[Mode6]	INTEGER,
			[Level1]	INTEGER,
			[Level2]	INTEGER,
			[Level3]	INTEGER,
			[Level4]	INTEGER,
			[Level5]	INTEGER,
			[Level6]	INTEGER,
			[LvlPerLvl1]	INTEGER,
			[LvlPerLvl2]	INTEGER,
			[LvlPerLvl3]	INTEGER,
			[LvlPerLvl4]	INTEGER,
			[LvlPerLvl5]	INTEGER,
			[LvlPerLvl6]	INTEGER,
			[HireDesc]	INTEGER,
			[NameFirst]	STRING (32),
			[NameLast]	STRING (37)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | inventory] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[invLeft]	INTEGER,
			[invRight]	INTEGER,
			[invTop]	INTEGER,
			[invBottom]	INTEGER,
			[gridX]	INTEGER,
			[gridY]	INTEGER,
			[iPadding4]	INTEGER,
			[gridLeft]	INTEGER,
			[gridRight]	INTEGER,
			[gridTop]	INTEGER,
			[gridBottom]	INTEGER,
			[gridBoxWidth]	INTEGER,
			[gridBoxHeight]	INTEGER,
			[iPadding9]	INTEGER,
			[rArmLeft]	INTEGER,
			[rArmRight]	INTEGER,
			[rArmTop]	INTEGER,
			[rArmBottom]	INTEGER,
			[rArmWidth]	INTEGER,
			[rArmHeight]	INTEGER,
			[iPadding14]	INTEGER,
			[torsoLeft]	INTEGER,
			[torsoRight]	INTEGER,
			[torsoTop]	INTEGER,
			[torsoBottom]	INTEGER,
			[torsoWidth]	INTEGER,
			[torsoHeight]	INTEGER,
			[iPadding19]	INTEGER,
			[lArmLeft]	INTEGER,
			[lArmRight]	INTEGER,
			[lArmTop]	INTEGER,
			[lArmBottom]	INTEGER,
			[lArmWidth]	INTEGER,
			[lArmHeight]	INTEGER,
			[iPadding24]	INTEGER,
			[headLeft]	INTEGER,
			[headRight]	INTEGER,
			[headTop]	INTEGER,
			[headBottom]	INTEGER,
			[headWidth]	INTEGER,
			[headHeight]	INTEGER,
			[iPadding29]	INTEGER,
			[neckLeft]	INTEGER,
			[neckRight]	INTEGER,
			[neckTop]	INTEGER,
			[neckBottom]	INTEGER,
			[neckWidth]	INTEGER,
			[neckHeight]	INTEGER,
			[iPadding34]	INTEGER,
			[rHandLeft]	INTEGER,
			[rHandRight]	INTEGER,
			[rHandTop]	INTEGER,
			[rHandBottom]	INTEGER,
			[rHandWidth]	INTEGER,
			[rHandHeight]	INTEGER,
			[iPadding39]	INTEGER,
			[lHandLeft]	INTEGER,
			[lHandRight]	INTEGER,
			[lHandTop ]	INTEGER,
			[lHandBottom]	INTEGER,
			[lHandWidth]	INTEGER,
			[lHandHeight]	INTEGER,
			[iPadding44]	INTEGER,
			[beltLeft]	INTEGER,
			[beltRight]	INTEGER,
			[beltTop]	INTEGER,
			[beltBottom]	INTEGER,
			[beltWidth]	INTEGER,
			[beltHeight]	INTEGER,
			[iPadding49]	INTEGER,
			[feetLeft]	INTEGER,
			[feetRight]	INTEGER,
			[feetTop]	INTEGER,
			[feetBottom]	INTEGER,
			[feetWidth]	INTEGER,
			[feetHeight]	INTEGER,
			[iPadding54]	INTEGER,
			[glovesLeft]	INTEGER,
			[glovesRight]	INTEGER,
			[glovesTop]	INTEGER,
			[glovesBottom]	INTEGER,
			[glovesWidth]	INTEGER,
			[glovesHeight]	INTEGER,
			[iPadding59]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | itemratio] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Unique]	INTEGER,
			[UniqueDivisor]	INTEGER,
			[UniqueMin]	INTEGER,
			[Rare]	INTEGER,
			[RareDivisor]	INTEGER,
			[RareMin]	INTEGER,
			[Set]	INTEGER,
			[SetDivisor]	INTEGER,
			[SetMin]	INTEGER,
			[Magic]	INTEGER,
			[MagicDivisor]	INTEGER,
			[MagicMin]	INTEGER,
			[HiQuality]	INTEGER,
			[HiQualityDivisor]	INTEGER,
			[Normal]	INTEGER,
			[NormalDivisor]	INTEGER,
			[Version]	INTEGER,
			[Uber]	INTEGER,
			[Class Specific]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | itemtypes] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Code]	STRING (4),
			[Equiv1]	INTEGER,
			[Equiv2]	INTEGER,
			[Repair]	INTEGER,
			[Body]	INTEGER,
			[BodyLoc1]	INTEGER,
			[BodyLoc2]	INTEGER,
			[Shoots]	INTEGER,
			[Quiver]	INTEGER,
			[Throwable]	INTEGER,
			[Reload]	INTEGER,
			[ReEquip]	INTEGER,
			[AutoStack]	INTEGER,
			[Magic]	INTEGER,
			[Rare]	INTEGER,
			[Normal]	INTEGER,
			[Charm]	INTEGER,
			[Gem]	INTEGER,
			[Beltable]	INTEGER,
			[MaxSock1]	INTEGER,
			[MaxSock25]	INTEGER,
			[MaxSock40]	INTEGER,
			[TreasureClass]	INTEGER,
			[Rarity]	INTEGER,
			[StaffMods]	INTEGER,
			[CostFormula]	INTEGER,
			[Class]	INTEGER,
			[StorePage]	INTEGER,
			[VarInvGfx]	INTEGER,
			[InvGfx1]	STRING (32),
			[InvGfx2]	STRING (32),
			[InvGfx3]	STRING (32),
			[InvGfx4]	STRING (32),
			[InvGfx5]	STRING (32),
			[InvGfx6]	STRING (32)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | leveldefs] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[QuestFlag]	INTEGER,
			[QuestFlagEx]	INTEGER,
			[Layer]	INTEGER,
			[SizeX]	INTEGER,
			[SizeX(N)]	INTEGER,
			[SizeX(H)]	INTEGER,
			[SizeY]	INTEGER,
			[SizeY(N)]	INTEGER,
			[SizeY(H)]	INTEGER,
			[OffsetX]	INTEGER,
			[OffsetY]	INTEGER,
			[Depend]	INTEGER,
			[DrlgType]	INTEGER,
			[LevelType]	INTEGER,
			[SubType]	INTEGER,
			[SubTheme]	INTEGER,
			[SubWaypoint]	INTEGER,
			[SubShrine]	INTEGER,
			[Vis0]	INTEGER,
			[Vis1]	INTEGER,
			[Vis2]	INTEGER,
			[Vis3]	INTEGER,
			[Vis4]	INTEGER,
			[Vis5]	INTEGER,
			[Vis6]	INTEGER,
			[Vis7]	INTEGER,
			[Warp0]	INTEGER,
			[Warp1]	INTEGER,
			[Warp2]	INTEGER,
			[Warp3]	INTEGER,
			[Warp4]	INTEGER,
			[Warp5]	INTEGER,
			[Warp6]	INTEGER,
			[Warp7]	INTEGER,
			[Intensity]	INTEGER,
			[Red]	INTEGER,
			[Green]	INTEGER,
			[Blue]	INTEGER,
			[Portal]	INTEGER,
			[Position]	INTEGER,
			[SaveMonsters]	INTEGER,
			[LOSDraw]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | levelprest] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Def]	INTEGER,
			[LevelId]	INTEGER,
			[Populate]	INTEGER,
			[Logicals]	INTEGER,
			[Outdoors]	INTEGER,
			[Animate]	INTEGER,
			[KillEdge]	INTEGER,
			[FillBlanks]	INTEGER,
			[Expansion]	INTEGER,
			[iPadding9]	INTEGER,
			[SizeX]	INTEGER,
			[SizeY]	INTEGER,
			[AutoMap]	INTEGER,
			[Scan]	INTEGER,
			[Pops]	INTEGER,
			[PopPad]	INTEGER,
			[Files]	INTEGER,
			[File1]	STRING (60),
			[File2]	STRING (60),
			[File3]	STRING (60),
			[File4]	STRING (60),
			[File5]	STRING (60),
			[File6]	STRING (60),
			[Dt1Mask]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | levels] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Id]	INTEGER,
			[Pal]	INTEGER,
			[Act]	INTEGER,
			[Teleport]	INTEGER,
			[Rain]	INTEGER,
			[Mud]	INTEGER,
			[NoPer]	INTEGER,
			[IsInside]	INTEGER,
			[DrawEdges]	INTEGER,
			[iPadding2]	INTEGER,
			[WarpDist]	INTEGER,
			[MonLvl1]	INTEGER,
			[MonLvl2]	INTEGER,
			[MonLvl3]	INTEGER,
			[MonLvl1Ex]	INTEGER,
			[MonLvl2Ex]	INTEGER,
			[MonLvl3Ex]	INTEGER,
			[MonDen]	INTEGER,
			[MonDen(N)]	INTEGER,
			[MonDen(H)]	INTEGER,
			[MonUMin]	INTEGER,
			[MonUMin(N)]	INTEGER,
			[MonUMin(H)]	INTEGER,
			[MonUMax]	INTEGER,
			[MonUMax(N)]	INTEGER,
			[MonUMax(H)]	INTEGER,
			[MonWndr]	INTEGER,
			[MonSpcWalk]	INTEGER,
			[Quest]	INTEGER,
			[rangedspawn]	INTEGER,
			[NumMon]	INTEGER,
			[iPadding13]	INTEGER,
			[mon1]	INTEGER,
			[mon2]	INTEGER,
			[mon3]	INTEGER,
			[mon4]	INTEGER,
			[mon5]	INTEGER,
			[mon6]	INTEGER,
			[mon7]	INTEGER,
			[mon8]	INTEGER,
			[mon9]	INTEGER,
			[mon10]	INTEGER,
			[mon11]	INTEGER,
			[mon12]	INTEGER,
			[mon13]	INTEGER,
			[mon14]	INTEGER,
			[mon15]	INTEGER,
			[mon16]	INTEGER,
			[mon17]	INTEGER,
			[mon18]	INTEGER,
			[mon19]	INTEGER,
			[mon20]	INTEGER,
			[mon21]	INTEGER,
			[mon22]	INTEGER,
			[mon23]	INTEGER,
			[mon24]	INTEGER,
			[mon25]	INTEGER,
			[nmon1]	INTEGER,
			[nmon2]	INTEGER,
			[nmon3]	INTEGER,
			[nmon4]	INTEGER,
			[nmon5]	INTEGER,
			[nmon6]	INTEGER,
			[nmon7]	INTEGER,
			[nmon8]	INTEGER,
			[nmon9]	INTEGER,
			[nmon10]	INTEGER,
			[nmon11]	INTEGER,
			[nmon12]	INTEGER,
			[nmon13]	INTEGER,
			[nmon14]	INTEGER,
			[nmon15]	INTEGER,
			[nmon16]	INTEGER,
			[nmon17]	INTEGER,
			[nmon18]	INTEGER,
			[nmon19]	INTEGER,
			[nmon20]	INTEGER,
			[nmon21]	INTEGER,
			[nmon22]	INTEGER,
			[nmon23]	INTEGER,
			[nmon24]	INTEGER,
			[nmon25]	INTEGER,
			[umon1]	INTEGER,
			[umon2]	INTEGER,
			[umon3]	INTEGER,
			[umon4]	INTEGER,
			[umon5]	INTEGER,
			[umon6]	INTEGER,
			[umon7]	INTEGER,
			[umon8]	INTEGER,
			[umon9]	INTEGER,
			[umon10]	INTEGER,
			[umon11]	INTEGER,
			[umon12]	INTEGER,
			[umon13]	INTEGER,
			[umon14]	INTEGER,
			[umon15]	INTEGER,
			[umon16]	INTEGER,
			[umon17]	INTEGER,
			[umon18]	INTEGER,
			[umon19]	INTEGER,
			[umon20]	INTEGER,
			[umon21]	INTEGER,
			[umon22]	INTEGER,
			[umon23]	INTEGER,
			[umon24]	INTEGER,
			[umon25]	INTEGER,
			[cmon1]	INTEGER,
			[cmon2]	INTEGER,
			[cmon3]	INTEGER,
			[cmon4]	INTEGER,
			[cpct1]	INTEGER,
			[cpct2]	INTEGER,
			[cpct3]	INTEGER,
			[cpct4]	INTEGER,
			[camt4]	INTEGER,
			[iPadding55]	INTEGER,
			[iPadding56]	INTEGER,
			[Waypoint]	INTEGER,
			[ObjGrp0]	INTEGER,
			[ObjGrp1]	INTEGER,
			[ObjGrp2]	INTEGER,
			[ObjGrp3]	INTEGER,
			[ObjGrp4]	INTEGER,
			[ObjGrp5]	INTEGER,
			[ObjGrp6]	INTEGER,
			[ObjGrp7]	INTEGER,
			[ObjPrb0]	INTEGER,
			[ObjPrb1]	INTEGER,
			[ObjPrb2]	INTEGER,
			[ObjPrb3]	INTEGER,
			[ObjPrb4]	INTEGER,
			[ObjPrb5]	INTEGER,
			[ObjPrb6]	INTEGER,
			[ObjPrb7]	INTEGER,
			[LevelName]	STRING (40),
			[LevelWarp]	STRING (40),
			[EntryFile]	STRING (39),
			[iPadding91]	INTEGER,
			[iPadding92]	INTEGER,
			[iPadding93]	INTEGER,
			[iPadding94]	INTEGER,
			[iPadding95]	INTEGER,
			[iPadding96]	INTEGER,
			[iPadding97]	INTEGER,
			[iPadding98]	INTEGER,
			[iPadding99]	INTEGER,
			[iPadding100]	INTEGER,
			[iPadding101]	INTEGER,
			[iPadding102]	INTEGER,
			[iPadding103]	INTEGER,
			[iPadding104]	INTEGER,
			[iPadding105]	INTEGER,
			[iPadding106]	INTEGER,
			[iPadding107]	INTEGER,
			[iPadding108]	INTEGER,
			[iPadding109]	INTEGER,
			[iPadding110]	INTEGER,
			[iPadding111]	INTEGER,
			[iPadding112]	INTEGER,
			[iPadding113]	INTEGER,
			[iPadding114]	INTEGER,
			[iPadding115]	INTEGER,
			[iPadding116]	INTEGER,
			[iPadding117]	INTEGER,
			[iPadding118]	INTEGER,
			[iPadding119]	INTEGER,
			[iPadding120]	INTEGER,
			[iPadding121]	INTEGER,
			[iPadding122]	INTEGER,
			[iPadding123]	INTEGER,
			[iPadding124]	INTEGER,
			[iPadding125]	INTEGER,
			[iPadding126]	INTEGER,
			[iPadding127]	INTEGER,
			[iPadding128]	INTEGER,
			[iPadding129]	INTEGER,
			[iPadding130]	INTEGER,
			[iPadding131]	INTEGER,
			[Themes]	INTEGER,
			[FloorFilter]	INTEGER,
			[BlankScreen]	INTEGER,
			[SoundEnv]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | lowqualityitems] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (34)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | lvlmaze] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Level]	INTEGER,
			[Rooms]	INTEGER,
			[Rooms(N)]	INTEGER,
			[Rooms(H)]	INTEGER,
			[SizeX]	INTEGER,
			[SizeY]	INTEGER,
			[Merge]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | lvlsub] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Type]	INTEGER,
			[File]	STRING (60),
			[CheckAll]	INTEGER,
			[BordType]	INTEGER,
			[Dt1Mask]	INTEGER,
			[GridSize]	INTEGER,
			[iPadding20]	INTEGER,
			[iPadding21]	INTEGER,
			[iPadding22]	INTEGER,
			[iPadding23]	INTEGER,
			[iPadding24]	INTEGER,
			[iPadding25]	INTEGER,
			[iPadding26]	INTEGER,
			[iPadding27]	INTEGER,
			[iPadding28]	INTEGER,
			[iPadding29]	INTEGER,
			[iPadding30]	INTEGER,
			[iPadding31]	INTEGER,
			[iPadding32]	INTEGER,
			[iPadding33]	INTEGER,
			[iPadding34]	INTEGER,
			[iPadding35]	INTEGER,
			[iPadding36]	INTEGER,
			[iPadding37]	INTEGER,
			[iPadding38]	INTEGER,
			[iPadding39]	INTEGER,
			[iPadding40]	INTEGER,
			[iPadding41]	INTEGER,
			[iPadding42]	INTEGER,
			[iPadding43]	INTEGER,
			[iPadding44]	INTEGER,
			[iPadding45]	INTEGER,
			[iPadding46]	INTEGER,
			[iPadding47]	INTEGER,
			[iPadding48]	INTEGER,
			[iPadding49]	INTEGER,
			[iPadding50]	INTEGER,
			[iPadding51]	INTEGER,
			[iPadding52]	INTEGER,
			[iPadding53]	INTEGER,
			[iPadding54]	INTEGER,
			[iPadding55]	INTEGER,
			[iPadding56]	INTEGER,
			[iPadding57]	INTEGER,
			[iPadding58]	INTEGER,
			[iPadding59]	INTEGER,
			[iPadding60]	INTEGER,
			[iPadding61]	INTEGER,
			[iPadding62]	INTEGER,
			[iPadding63]	INTEGER,
			[iPadding64]	INTEGER,
			[iPadding65]	INTEGER,
			[iPadding66]	INTEGER,
			[iPadding67]	INTEGER,
			[iPadding68]	INTEGER,
			[iPadding69]	INTEGER,
			[iPadding70]	INTEGER,
			[Prob0]	INTEGER,
			[Prob1]	INTEGER,
			[Prob2]	INTEGER,
			[Prob3]	INTEGER,
			[Prob4]	INTEGER,
			[Trials0]	INTEGER,
			[Trials1]	INTEGER,
			[Trials2]	INTEGER,
			[Trials3]	INTEGER,
			[Trials4]	INTEGER,
			[Max0]	INTEGER,
			[Max1]	INTEGER,
			[Max2]	INTEGER,
			[Max3]	INTEGER,
			[Max4]	INTEGER,
			[Expansion]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | lvltypes] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[File 1]	STRING (60),
			[File 2]	STRING (60),
			[File 3]	STRING (60),
			[File 4]	STRING (60),
			[File 5]	STRING (60),
			[File 6]	STRING (60),
			[File 7]	STRING (60),
			[File 8]	STRING (60),
			[File 9]	STRING (60),
			[File 10]	STRING (60),
			[File 11]	STRING (60),
			[File 12]	STRING (60),
			[File 13]	STRING (60),
			[File 14]	STRING (60),
			[File 15]	STRING (60),
			[File 16]	STRING (60),
			[File 17]	STRING (60),
			[File 18]	STRING (60),
			[File 19]	STRING (60),
			[File 20]	STRING (60),
			[File 21]	STRING (60),
			[File 22]	STRING (60),
			[File 23]	STRING (60),
			[File 24]	STRING (60),
			[File 25]	STRING (60),
			[File 26]	STRING (60),
			[File 27]	STRING (60),
			[File 28]	STRING (60),
			[File 29]	STRING (60),
			[File 30]	STRING (60),
			[File 31]	STRING (60),
			[File 32]	STRING (60),
			[Act]	INTEGER,
			[Expansion]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | lvlwarp] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Id]	INTEGER,
			[SelectX]	INTEGER,
			[SelectY]	INTEGER,
			[SelectDX]	INTEGER,
			[SelectDY]	INTEGER,
			[ExitWalkX]	INTEGER,
			[ExitWalkY]	INTEGER,
			[OffsetX]	INTEGER,
			[OffsetY]	INTEGER,
			[LitVersion]	INTEGER,
			[Tiles]	INTEGER,
			[Direction]	STRING (4)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | magicprefix] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[iPadding8]	INTEGER,
			[version]	INTEGER,
			[mod1code]	INTEGER,
			[mod1param]	INTEGER,
			[mod1min]	INTEGER,
			[mod1max]	INTEGER,
			[mod2code]	INTEGER,
			[mod2param]	INTEGER,
			[mod2min]	INTEGER,
			[mod2max]	INTEGER,
			[mod3code]	INTEGER,
			[mod3param]	INTEGER,
			[mod3min]	INTEGER,
			[mod3max]	INTEGER,
			[spawnable]	INTEGER,
			[transformcolor]	INTEGER,
			[level]	INTEGER,
			[iPadding22]	INTEGER,
			[group]	INTEGER,
			[maxlevel]	INTEGER,
			[rare]	INTEGER,
			[levelreq]	INTEGER,
			[classspecific]	INTEGER,
			[class]	INTEGER,
			[classlevelreq]	INTEGER,
			[itype1]	INTEGER,
			[itype2]	INTEGER,
			[itype3]	INTEGER,
			[itype4]	INTEGER,
			[itype5]	INTEGER,
			[itype6]	INTEGER,
			[itype7]	INTEGER,
			[etype1]	INTEGER,
			[etype2]	INTEGER,
			[etype3]	INTEGER,
			[etype4]	INTEGER,
			[etype5]	INTEGER,
			[frequency]	INTEGER,
			[divide]	INTEGER,
			[multiply]	INTEGER,
			[add]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | magicsuffix] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[iPadding8]	INTEGER,
			[version]	INTEGER,
			[mod1code]	INTEGER,
			[mod1param]	INTEGER,
			[mod1min]	INTEGER,
			[mod1max]	INTEGER,
			[mod2code]	INTEGER,
			[mod2param]	INTEGER,
			[mod2min]	INTEGER,
			[mod2max]	INTEGER,
			[mod3code]	INTEGER,
			[mod3param]	INTEGER,
			[mod3min]	INTEGER,
			[mod3max]	INTEGER,
			[spawnable]	INTEGER,
			[transformcolor]	INTEGER,
			[level]	INTEGER,
			[iPadding22]	INTEGER,
			[group]	INTEGER,
			[maxlevel]	INTEGER,
			[rare]	INTEGER,
			[levelreq]	INTEGER,
			[classspecific]	INTEGER,
			[class]	INTEGER,
			[classlevelreq]	INTEGER,
			[itype1]	INTEGER,
			[itype2]	INTEGER,
			[itype3]	INTEGER,
			[itype4]	INTEGER,
			[itype5]	INTEGER,
			[itype6]	INTEGER,
			[itype7]	INTEGER,
			[etype1]	INTEGER,
			[etype2]	INTEGER,
			[etype3]	INTEGER,
			[etype4]	INTEGER,
			[etype5]	INTEGER,
			[frequency]	INTEGER,
			[divide]	INTEGER,
			[multiply]	INTEGER,
			[add]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | misc] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[flippyfile]	STRING (32),
			[invfile]	STRING (32),
			[uniqueinvfile]	STRING (32),
			[acPadding]	STRING (32),
			[code]	STRING (4),
			[acPad2]	STRING (12),
			[alternategfx]	STRING (4),
			[pSpell]	INTEGER,
			[state]	INTEGER,
			[cstate1]	INTEGER,
			[cstate2]	INTEGER,
			[stat1]	INTEGER,
			[stat2]	INTEGER,
			[stat3]	INTEGER,
			[calc1]	INTEGER,
			[calc2]	INTEGER,
			[calc3]	INTEGER,
			[len]	INTEGER,
			[spelldesc]	INTEGER,
			[spelldescstr]	INTEGER,
			[spelldesccalc]	INTEGER,
			[BetterGem]	STRING (4),
			[acPad6]	STRING (8),
			[TMogType]	STRING (4),
			[acPad7]	STRING (8),
			[gamble cost]	INTEGER,
			[speed]	INTEGER,
			[acPad9]	STRING (3),
			[bitfield1]	INTEGER,
			[acPad10]	STRING (3),
			[cost]	INTEGER,
			[minstack]	INTEGER,
			[maxstack]	INTEGER,
			[spawnstack]	INTEGER,
			[gemoffset]	INTEGER,
			[acPad12]	STRING (2),
			[namestr]	INTEGER,
			[version]	INTEGER,
			[acPad13]	STRING (1),
			[auto prefix]	INTEGER,
			[missiletype]	INTEGER,
			[bPad]	INTEGER,
			[rarity]	INTEGER,
			[level]	INTEGER,
			[mindam]	INTEGER,
			[maxdam]	INTEGER,
			[acPad14]	STRING (15),
			[invwidth]	INTEGER,
			[invheight]	INTEGER,
			[acPad15]	STRING (2),
			[nodurability]	INTEGER,
			[bPad2]	INTEGER,
			[component]	INTEGER,
			[acPad16]	STRING (7),
			[useable]	INTEGER,
			[type]	INTEGER,
			[type2]	INTEGER,
			[acPad17]	STRING (2),
			[dropsound]	INTEGER,
			[usesound]	INTEGER,
			[dropsfxframe]	INTEGER,
			[unique]	INTEGER,
			[quest]	INTEGER,
			[questdiffcheck]	INTEGER,
			[transparent]	INTEGER,
			[transtbl]	INTEGER,
			[bPad4]	INTEGER,
			[lightradius]	INTEGER,
			[belt]	INTEGER,
			[autobelt]	INTEGER,
			[stackable]	INTEGER,
			[spawnable]	INTEGER,
			[spellicon]	INTEGER,
			[durwarning]	INTEGER,
			[qntwarning]	INTEGER,
			[hasinv]	INTEGER,
			[gemsockets]	INTEGER,
			[Transmogrify]	INTEGER,
			[TMogMin]	INTEGER,
			[TMogMax]	INTEGER,
			[acPad18]	STRING (2),
			[gemapplytype]	INTEGER,
			[levelreq]	INTEGER,
			[bPad5]	INTEGER,
			[Transform]	INTEGER,
			[InvTrans]	INTEGER,
			[compactsave]	INTEGER,
			[SkipName]	INTEGER,
			[Nameable]	INTEGER,
			[AkaraMin]	INTEGER,
			[GheedMin]	INTEGER,
			[CharsiMin]	INTEGER,
			[FaraMin]	INTEGER,
			[LysanderMin]	INTEGER,
			[DrognanMin]	INTEGER,
			[HraltiMin]	INTEGER,
			[AlkorMin]	INTEGER,
			[OrmusMin]	INTEGER,
			[ElzixMin]	INTEGER,
			[AshearaMin]	INTEGER,
			[CainMin]	INTEGER,
			[HalbuMin]	INTEGER,
			[JamellaMin]	INTEGER,
			[MalahMin]	INTEGER,
			[LarzukMin]	INTEGER,
			[DrehyaMin]	INTEGER,
			[AkaraMax]	INTEGER,
			[GheedMax]	INTEGER,
			[CharsiMax]	INTEGER,
			[FaraMax]	INTEGER,
			[LysanderMax]	INTEGER,
			[DrognanMax]	INTEGER,
			[HraltiMax]	INTEGER,
			[AlkorMax]	INTEGER,
			[OrmusMax]	INTEGER,
			[ElzixMax]	INTEGER,
			[AshearaMax]	INTEGER,
			[CainMax]	INTEGER,
			[HalbuMax]	INTEGER,
			[JamellaMax]	INTEGER,
			[MalahMax]	INTEGER,
			[LarzukMax]	INTEGER,
			[DrehyaMax]	INTEGER,
			[AkaraMagicMin]	INTEGER,
			[GheedMagicMin]	INTEGER,
			[CharsiMagicMin]	INTEGER,
			[FaraMagicMin]	INTEGER,
			[LysanderMagicMin]	INTEGER,
			[DrognanMagicMin]	INTEGER,
			[HraltiMagicMin]	INTEGER,
			[AlkorMagicMin]	INTEGER,
			[OrmusMagicMin]	INTEGER,
			[ElzixMagicMin]	INTEGER,
			[AshearaMagicMin]	INTEGER,
			[CainMagicMin]	INTEGER,
			[HalbuMagicMin]	INTEGER,
			[JamellaMagicMin]	INTEGER,
			[MalahMagicMin]	INTEGER,
			[LarzukMagicMin]	INTEGER,
			[DrehyaMagicMin]	INTEGER,
			[AkaraMagicMax]	INTEGER,
			[GheedMagicMax]	INTEGER,
			[CharsiMagicMax]	INTEGER,
			[FaraMagicMax]	INTEGER,
			[LysanderMagicMax]	INTEGER,
			[DrognanMagicMax]	INTEGER,
			[HraltiMagicMax]	INTEGER,
			[AlkorMagicMax]	INTEGER,
			[OrmusMagicMax]	INTEGER,
			[ElzixMagicMax]	INTEGER,
			[AshearaMagicMax]	INTEGER,
			[CainMagicMax]	INTEGER,
			[HalbuMagicMax]	INTEGER,
			[JamellaMagicMax]	INTEGER,
			[MalahMagicMax]	INTEGER,
			[LarzukMagicMax]	INTEGER,
			[DrehyaMagicMax]	INTEGER,
			[AkaraMagicLvl]	INTEGER,
			[GheedMagicLvl]	INTEGER,
			[CharsiMagicLvl]	INTEGER,
			[FaraMagicLvl]	INTEGER,
			[LysanderMagicLvl]	INTEGER,
			[DrognanMagicLvl]	INTEGER,
			[HraltiMagicLvl]	INTEGER,
			[AlkorMagicLvl]	INTEGER,
			[OrmusMagicLvl]	INTEGER,
			[ElzixMagicLvl]	INTEGER,
			[AshearaMagicLvl]	INTEGER,
			[CainMagicLvl]	INTEGER,
			[HalbuMagicLvl]	INTEGER,
			[JamellaMagicLvl]	INTEGER,
			[MalahMagicLvl]	INTEGER,
			[LarzukMagicLvl]	INTEGER,
			[DrehyaMagicLvl]	INTEGER,
			[bPad6]	INTEGER,
			[NightmareUpgrade]	STRING (4),
			[HellUpgrade]	STRING (4),
			[PermStoreItem]	INTEGER,
			[multibuy]	INTEGER,
			[acPad20]	STRING (2)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | misscalc] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[code]	STRING (4)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monequip] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[monster]	INTEGER,
			[level]	INTEGER,
			[oninit]	INTEGER,
			[item1]	STRING (4),
			[item2]	STRING (4),
			[item3]	STRING (4),
			[loc1]	INTEGER,
			[loc2]	INTEGER,
			[loc3]	INTEGER,
			[mod1]	INTEGER,
			[mod2]	INTEGER,
			[mod3]	INTEGER,
			[iPadding6]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monitempercent] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[HeartPercent]	INTEGER,
			[BodyPartPercent]	INTEGER,
			[TreasureClassPercent]	INTEGER,
			[ComponentPercent]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monlvl] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[AC]	INTEGER,
			[AC(N)]	INTEGER,
			[AC(H)]	INTEGER,
			[L-AC]	INTEGER,
			[L-AC(N)]	INTEGER,
			[L-AC(H)]	INTEGER,
			[TH]	INTEGER,
			[TH(N)]	INTEGER,
			[TH(H)]	INTEGER,
			[L-TH]	INTEGER,
			[L-TH(N)]	INTEGER,
			[L-TH(H)]	INTEGER,
			[HP]	INTEGER,
			[HP(N)]	INTEGER,
			[HP(H)]	INTEGER,
			[L-HP]	INTEGER,
			[L-HP(N)]	INTEGER,
			[L-HP(H)]	INTEGER,
			[DM]	INTEGER,
			[DM(N)]	INTEGER,
			[DM(H)]	INTEGER,
			[L-DM]	INTEGER,
			[L-DM(N)]	INTEGER,
			[L-DM(H)]	INTEGER,
			[XP]	INTEGER,
			[XP(N)]	INTEGER,
			[XP(H)]	INTEGER,
			[L-XP]	INTEGER,
			[L-XP(N)]	INTEGER,
			[L-XP(H)]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monmode] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[name]	STRING (32),
			[token]	STRING (20)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monplace] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Id]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monpreset] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Act]	INTEGER,
			[iPadding0]	INTEGER,
			[Place]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monprop] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Id]	INTEGER,
			[prop1]	INTEGER,
			[par1]	INTEGER,
			[min1]	INTEGER,
			[max1]	INTEGER,
			[prop2]	INTEGER,
			[par2]	INTEGER,
			[min2]	INTEGER,
			[max2]	INTEGER,
			[prop3]	INTEGER,
			[par3]	INTEGER,
			[min3]	INTEGER,
			[max3]	INTEGER,
			[prop4]	INTEGER,
			[par4]	INTEGER,
			[min4]	INTEGER,
			[max4]	INTEGER,
			[prop5]	INTEGER,
			[par5]	INTEGER,
			[min5]	INTEGER,
			[max5]	INTEGER,
			[prop6]	INTEGER,
			[par6]	INTEGER,
			[min6]	INTEGER,
			[max6]	INTEGER,
			[prop1 (N)]	INTEGER,
			[par1 (N)]	INTEGER,
			[min1 (N)]	INTEGER,
			[max1 (N)]	INTEGER,
			[prop2 (N)]	INTEGER,
			[par2 (N)]	INTEGER,
			[min2 (N)]	INTEGER,
			[max2 (N)]	INTEGER,
			[prop3 (N)]	INTEGER,
			[par3 (N)]	INTEGER,
			[min3 (N)]	INTEGER,
			[max3 (N)]	INTEGER,
			[prop4 (N)]	INTEGER,
			[par4 (N)]	INTEGER,
			[min4 (N)]	INTEGER,
			[max4 (N)]	INTEGER,
			[prop5 (N)]	INTEGER,
			[par5 (N)]	INTEGER,
			[min5 (N)]	INTEGER,
			[max5 (N)]	INTEGER,
			[prop6 (N)]	INTEGER,
			[par6 (N)]	INTEGER,
			[min6 (N)]	INTEGER,
			[max6 (N)]	INTEGER,
			[prop1 (H)]	INTEGER,
			[par1 (H)]	INTEGER,
			[min1 (H)]	INTEGER,
			[max1 (H)]	INTEGER,
			[prop2 (H)]	INTEGER,
			[par2 (H)]	INTEGER,
			[min2 (H)]	INTEGER,
			[max2 (H)]	INTEGER,
			[prop3 (H)]	INTEGER,
			[par3 (H)]	INTEGER,
			[min3 (H)]	INTEGER,
			[max3 (H)]	INTEGER,
			[prop4 (H)]	INTEGER,
			[par4 (H)]	INTEGER,
			[min4 (H)]	INTEGER,
			[max4 (H)]	INTEGER,
			[prop5 (H)]	INTEGER,
			[par5 (H)]	INTEGER,
			[min5 (H)]	INTEGER,
			[max5 (H)]	INTEGER,
			[prop6 (H)]	INTEGER,
			[par6 (H)]	INTEGER,
			[min6 (H)]	INTEGER,
			[max6 (H)]	INTEGER,
			[chance1]	INTEGER,
			[chance2]	INTEGER,
			[chance3]	INTEGER,
			[chance4]	INTEGER,
			[chance5]	INTEGER,
			[chance6]	INTEGER,
			[chance1 (N)]	INTEGER,
			[chance2 (N)]	INTEGER,
			[chance3 (N)]	INTEGER,
			[chance4 (N)]	INTEGER,
			[chance5 (N)]	INTEGER,
			[chance6 (N)]	INTEGER,
			[chance1 (H)]	INTEGER,
			[chance2 (H)]	INTEGER,
			[chance3 (H)]	INTEGER,
			[chance4 (H)]	INTEGER,
			[chance5 (H)]	INTEGER,
			[chance6 (H)]	INTEGER,
			[iPadding77]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monseq] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[iPadding0]	INTEGER,
			[mode]	INTEGER,
			[frame]	INTEGER,
			[dir]	INTEGER,
			[event]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monsounds] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[iPadding0]	INTEGER,
			[Attack1]	INTEGER,
			[Att1Del]	INTEGER,
			[Att1Prb]	INTEGER,
			[Weapon1]	INTEGER,
			[Wea1Del]	INTEGER,
			[Wea1Vol]	INTEGER,
			[Attack2]	INTEGER,
			[Att2Del]	INTEGER,
			[Att2Prb]	INTEGER,
			[Weapon2]	INTEGER,
			[Wea2Del]	INTEGER,
			[Wea2Vol]	INTEGER,
			[HitSound]	INTEGER,
			[HitDelay]	INTEGER,
			[DeathSound]	INTEGER,
			[DeaDelay]	INTEGER,
			[Skill1]	INTEGER,
			[Skill2]	INTEGER,
			[Skill3]	INTEGER,
			[Skill4]	INTEGER,
			[Footstep]	INTEGER,
			[FootstepLayer]	INTEGER,
			[FsCnt]	INTEGER,
			[FsOff]	INTEGER,
			[FsPrb]	INTEGER,
			[Neutral]	INTEGER,
			[NeuTime]	INTEGER,
			[Init]	INTEGER,
			[Taunt]	INTEGER,
			[Flee]	INTEGER,
			[CvtMo1]	INTEGER,
			[CvtTgt1]	INTEGER,
			[iPadding31]	STRING (2),
			[CvtSk1]	INTEGER,
			[CvtMo2]	INTEGER,
			[CvtTgt2]	INTEGER,
			[iPadding33]	STRING (2),
			[CvtSk2]	INTEGER,
			[CvtMo3]	INTEGER,
			[CvtTgt3]	INTEGER,
			[iPadding35]	STRING (2),
			[CvtSk3]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monstats] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[hcIdx]	INTEGER,
			[BaseId]	INTEGER,
			[NextInClass]	INTEGER,
			[NameStr]	INTEGER,
			[DescStr]	INTEGER,
			[iPadding2]	INTEGER,
			[MonStatsFlags]	INTEGER,
			[Code]	STRING (4),
			[MonSound]	INTEGER,
			[UMonSound]	INTEGER,
			[MonStatsEx]	INTEGER,
			[MonProp]	INTEGER,
			[MonType]	INTEGER,
			[AI]	INTEGER,
			[spawn]	INTEGER,
			[spawnx]	INTEGER,
			[spawny]	INTEGER,
			[spawnmode]	INTEGER,
			[minion1]	INTEGER,
			[minion2]	INTEGER,
			[iPadding10]	INTEGER,
			[PartyMin]	INTEGER,
			[PartyMax]	INTEGER,
			[Rarity]	INTEGER,
			[MinGrp]	INTEGER,
			[MaxGrp]	INTEGER,
			[sparsePopulate]	INTEGER,
			[Velocity]	INTEGER,
			[Run]	INTEGER,
			[iPadding13]	INTEGER,
			[iPadding14]	INTEGER,
			[MissA1]	INTEGER,
			[MissA2]	INTEGER,
			[MissS1]	INTEGER,
			[MissS2]	INTEGER,
			[MissS3]	INTEGER,
			[MissS4]	INTEGER,
			[MissC]	INTEGER,
			[MissSQ]	INTEGER,
			[iPadding18]	INTEGER,
			[Align]	INTEGER,
			[TransLvl]	INTEGER,
			[threat]	INTEGER,
			[aidel]	INTEGER,
			[aidel(N)]	INTEGER,
			[aidel(H)]	INTEGER,
			[aidist]	INTEGER,
			[aidist(N)]	INTEGER,
			[aidist(H)]	INTEGER,
			[iPadding21]	INTEGER,
			[aip1]	INTEGER,
			[aip1(N)]	INTEGER,
			[aip1(H)]	INTEGER,
			[aip2]	INTEGER,
			[aip2(N)]	INTEGER,
			[aip2(H)]	INTEGER,
			[aip3]	INTEGER,
			[aip3(N)]	INTEGER,
			[aip3(H)]	INTEGER,
			[aip4]	INTEGER,
			[aip4(N)]	INTEGER,
			[aip4(H)]	INTEGER,
			[aip5]	INTEGER,
			[aip5(N)]	INTEGER,
			[aip5(H)]	INTEGER,
			[aip6]	INTEGER,
			[aip6(N)]	INTEGER,
			[aip6(H)]	INTEGER,
			[aip7]	INTEGER,
			[aip7(N)]	INTEGER,
			[aip7(H)]	INTEGER,
			[aip8]	INTEGER,
			[aip8(N)]	INTEGER,
			[aip8(H)]	INTEGER,
			[TreasureClass1]	INTEGER,
			[TreasureClass2]	INTEGER,
			[TreasureClass3]	INTEGER,
			[TreasureClass4]	INTEGER,
			[TreasureClass1(N)]	INTEGER,
			[TreasureClass2(N)]	INTEGER,
			[TreasureClass3(N)]	INTEGER,
			[TreasureClass4(N)]	INTEGER,
			[TreasureClass1(H)]	INTEGER,
			[TreasureClass2(H)]	INTEGER,
			[TreasureClass3(H)]	INTEGER,
			[TreasureClass4(H)]	INTEGER,
			[TCQuestId]	INTEGER,
			[TCQuestCP]	INTEGER,
			[Drain]	INTEGER,
			[Drain(N)]	INTEGER,
			[Drain(H)]	INTEGER,
			[ToBlock]	INTEGER,
			[ToBlock(N)]	INTEGER,
			[ToBlock(H)]	INTEGER,
			[Crit]	INTEGER,
			[SkillDamage]	INTEGER,
			[Level]	INTEGER,
			[Level(N)]	INTEGER,
			[Level(H)]	INTEGER,
			[minHP]	INTEGER,
			[MinHP(N)]	INTEGER,
			[MinHP(H)]	INTEGER,
			[maxHP]	INTEGER,
			[MaxHP(N)]	INTEGER,
			[MaxHP(H)]	INTEGER,
			[AC]	INTEGER,
			[AC(N)]	INTEGER,
			[AC(H)]	INTEGER,
			[A1TH]	INTEGER,
			[A1TH(N)]	INTEGER,
			[A1TH(H)]	INTEGER,
			[A2TH]	INTEGER,
			[A2TH(N)]	INTEGER,
			[A2TH(H)]	INTEGER,
			[S1TH]	INTEGER,
			[S1TH(N)]	INTEGER,
			[S1TH(H)]	INTEGER,
			[Exp]	INTEGER,
			[Exp(N)]	INTEGER,
			[Exp(H)]	INTEGER,
			[A1MinD]	INTEGER,
			[A1MinD(N)]	INTEGER,
			[A1MinD(H)]	INTEGER,
			[A1MaxD]	INTEGER,
			[A1MaxD(N)]	INTEGER,
			[A1MaxD(H)]	INTEGER,
			[A2MinD]	INTEGER,
			[A2MinD(N)]	INTEGER,
			[A2MinD(H)]	INTEGER,
			[A2MaxD]	INTEGER,
			[A2MaxD(N)]	INTEGER,
			[A2MaxD(H)]	INTEGER,
			[S1MinD]	INTEGER,
			[S1MinD(N)]	INTEGER,
			[S1MinD(H)]	INTEGER,
			[S1MaxD]	INTEGER,
			[S1MaxD(N)]	INTEGER,
			[S1MaxD(H)]	INTEGER,
			[El1Mode]	INTEGER,
			[El2Mode]	INTEGER,
			[El3Mode]	INTEGER,
			[El1Type]	INTEGER,
			[El2Type]	INTEGER,
			[El3Type]	INTEGER,
			[El1Pct]	INTEGER,
			[El1Pct(N)]	INTEGER,
			[El1Pct(H)]	INTEGER,
			[El2Pct]	INTEGER,
			[El2Pct(N)]	INTEGER,
			[El2Pct(H)]	INTEGER,
			[El3Pct]	INTEGER,
			[El3Pct(N)]	INTEGER,
			[El3Pct(H)]	INTEGER,
			[iPadding67]	INTEGER,
			[El1MinD]	INTEGER,
			[El1MinD(N)]	INTEGER,
			[El1MinD(H)]	INTEGER,
			[El2MinD]	INTEGER,
			[El2MinD(N)]	INTEGER,
			[El2MinD(H)]	INTEGER,
			[El3MinD]	INTEGER,
			[El3MinD(N)]	INTEGER,
			[El3MinD(H)]	INTEGER,
			[El1MaxD]	INTEGER,
			[El1MaxD(N)]	INTEGER,
			[El1MaxD(H)]	INTEGER,
			[El2MaxD]	INTEGER,
			[El2MaxD(N)]	INTEGER,
			[El2MaxD(H)]	INTEGER,
			[El3MaxD]	INTEGER,
			[El3MaxD(N)]	INTEGER,
			[El3MaxD(H)]	INTEGER,
			[El1Dur]	INTEGER,
			[El1Dur(N)]	INTEGER,
			[El1Dur(H)]	INTEGER,
			[El2Dur]	INTEGER,
			[El2Dur(N)]	INTEGER,
			[El2Dur(H)]	INTEGER,
			[El3Dur]	INTEGER,
			[El3Dur(N)]	INTEGER,
			[El3Dur(H)]	INTEGER,
			[ResDm]	INTEGER,
			[ResDm(N)]	INTEGER,
			[ResDm(H)]	INTEGER,
			[ResMa]	INTEGER,
			[ResMa(N)]	INTEGER,
			[ResMa(H)]	INTEGER,
			[ResFi]	INTEGER,
			[ResFi(N)]	INTEGER,
			[ResFi(H)]	INTEGER,
			[ResLi]	INTEGER,
			[ResLi(N)]	INTEGER,
			[ResLi(H)]	INTEGER,
			[ResCo]	INTEGER,
			[ResCo(N)]	INTEGER,
			[ResCo(H)]	INTEGER,
			[ResPo]	INTEGER,
			[ResPo(N)]	INTEGER,
			[ResPo(H)]	INTEGER,
			[coldeffect]	INTEGER,
			[coldeffect(N)]	INTEGER,
			[coldeffect(H)]	INTEGER,
			[iPadding90]	INTEGER,
			[SendSkills]	INTEGER,
			[Skill1]	INTEGER,
			[Skill2]	INTEGER,
			[Skill3]	INTEGER,
			[Skill4]	INTEGER,
			[Skill5]	INTEGER,
			[Skill6]	INTEGER,
			[Skill7]	INTEGER,
			[Skill8]	INTEGER,
			[Sk1modeType]	INTEGER,
			[Sk2modeType]	INTEGER,
			[Sk3modeType]	INTEGER,
			[Sk4modeType]	INTEGER,
			[Sk5modeType]	INTEGER,
			[Sk6modeType]	INTEGER,
			[Sk7modeType]	INTEGER,
			[Sk8modeType]	INTEGER,
			[Sk1mode]	INTEGER,
			[Sk2mode]	INTEGER,
			[Sk3mode]	INTEGER,
			[Sk4mode]	INTEGER,
			[Sk5mode]	INTEGER,
			[Sk6mode]	INTEGER,
			[Sk7mode]	INTEGER,
			[Sk8mode]	INTEGER,
			[Sk1lvl]	INTEGER,
			[Sk2lvl]	INTEGER,
			[Sk3lvl]	INTEGER,
			[Sk4lvl]	INTEGER,
			[Sk5lvl]	INTEGER,
			[Sk6lvl]	INTEGER,
			[Sk7lvl]	INTEGER,
			[Sk8lvl]	INTEGER,
			[DamageRegen]	INTEGER,
			[SplEndDeath]	INTEGER,
			[SplGetModeChart]	INTEGER,
			[SplEndGeneric]	INTEGER,
			[SplClientEnd]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monstats2] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Id]	INTEGER,
			[corpseSel]	INTEGER,
			[shiftSel]	INTEGER,
			[noSel]	INTEGER,
			[alSel]	INTEGER,
			[isSel]	INTEGER,
			[noOvly]	INTEGER,
			[noMap]	INTEGER,
			[noGfxHitTest]	INTEGER,
			[noUniqueShift]	INTEGER,
			[Shadow]	INTEGER,
			[critter]	INTEGER,
			[soft]	INTEGER,
			[large]	INTEGER,
			[small]	INTEGER,
			[isAtt]	INTEGER,
			[revive]	INTEGER,
			[unflatDead]	INTEGER,
			[deadCol]	INTEGER,
			[objCol]	INTEGER,
			[inert]	INTEGER,
			[compositeDeath]	INTEGER,
			[SizeX]	INTEGER,
			[SizeY]	INTEGER,
			[spawnCol]	INTEGER,
			[Height]	INTEGER,
			[OverlayHeight]	INTEGER,
			[pixHeight]	INTEGER,
			[MeleeRng]	INTEGER,
			[iPadding3]	INTEGER,
			[BaseW]	STRING (4),
			[HitClass]	INTEGER,
			[HDvNum]	INTEGER,
			[TRvNum]	INTEGER,
			[LGvNum]	INTEGER,
			[RavNum]	INTEGER,
			[LavNum]	INTEGER,
			[RHvNum]	INTEGER,
			[LHvNum]	INTEGER,
			[SHvNum]	INTEGER,
			[S1vNum]	INTEGER,
			[S2vNum]	INTEGER,
			[S3vNum]	INTEGER,
			[S4vNum]	INTEGER,
			[S5vNum]	INTEGER,
			[S6vNum]	INTEGER,
			[S7vNum]	INTEGER,
			[S8vNum]	INTEGER,
			[iPadding9]	INTEGER,
			[HDv]	STRING (12),
			[TRv]	STRING (12),
			[LGv]	STRING (12),
			[Rav]	STRING (12),
			[Lav]	STRING (12),
			[RHv]	STRING (12),
			[LHv]	STRING (12),
			[SHv]	STRING (12),
			[S1v]	STRING (12),
			[S2v]	STRING (12),
			[S3v]	STRING (12),
			[S4v]	STRING (12),
			[S5v]	STRING (12),
			[S6v]	STRING (12),
			[S7v]	STRING (12),
			[S8v]	STRING (12),
			[iPadding57]	INTEGER,
			[mSC]	INTEGER,
			[mBL]	INTEGER,
			[mA2]	INTEGER,
			[mA1]	INTEGER,
			[mGH]	INTEGER,
			[mWL]	INTEGER,
			[mNU]	INTEGER,
			[mDT]	INTEGER,
			[mRN]	INTEGER,
			[mSQ]	INTEGER,
			[mKB]	INTEGER,
			[mDD]	INTEGER,
			[mS4]	INTEGER,
			[mS3]	INTEGER,
			[mS2]	INTEGER,
			[mS1]	INTEGER,
			[TotalPieces]	INTEGER,
			[dDT]	INTEGER,
			[dNU]	INTEGER,
			[dWL]	INTEGER,
			[dGH]	INTEGER,
			[dA1]	INTEGER,
			[dA2]	INTEGER,
			[dBL]	INTEGER,
			[dSC]	INTEGER,
			[dS1]	INTEGER,
			[dS2]	INTEGER,
			[dS3]	INTEGER,
			[dS4]	INTEGER,
			[dDD]	INTEGER,
			[dKB]	INTEGER,
			[dSQ]	INTEGER,
			[dRN]	INTEGER,
			[SCmv]	INTEGER,
			[A2mv]	INTEGER,
			[A1mv]	INTEGER,
			[S4mv]	INTEGER,
			[S3mv]	INTEGER,
			[S2mv]	INTEGER,
			[S1mv]	INTEGER,
			[InfernoLen]	INTEGER,
			[InfernoAnim]	INTEGER,
			[InfernoRollback]	INTEGER,
			[ResurrectMode]	INTEGER,
			[ResurrectSkill]	INTEGER,
			[htTop]	INTEGER,
			[htLeft]	INTEGER,
			[htWidth]	INTEGER,
			[htHeight]	INTEGER,
			[iPadding69]	INTEGER,
			[automapCel]	INTEGER,
			[localBlood]	INTEGER,
			[Bleed]	INTEGER,
			[Light]	INTEGER,
			[light-r]	INTEGER,
			[light-g]	INTEGER,
			[light-b]	INTEGER,
			[Utrans]	INTEGER,
			[Utrans(N)]	INTEGER,
			[Utrans(H)]	INTEGER,
			[acPaddding]	STRING (3),
			[Heart]	STRING (4),
			[BodyPart]	STRING (4),
			[restore]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | monumod] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[id]	INTEGER,
			[version]	INTEGER,
			[enabled]	INTEGER,
			[xfer]	INTEGER,
			[champion]	INTEGER,
			[fPick]	INTEGER,
			[exclude1]	INTEGER,
			[exclude2]	INTEGER,
			[cpick]	INTEGER,
			[cpick (N)]	INTEGER,
			[cpick (H)]	INTEGER,
			[upick]	INTEGER,
			[upick (N)]	INTEGER,
			[upick (H)]	INTEGER,
			[iPadding6]	INTEGER,
			[constants]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | npc] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[npc]	INTEGER,
			[sell mult]	INTEGER,
			[buy mult]	INTEGER,
			[rep mult]	INTEGER,
			[questflag A]	INTEGER,
			[questflag B]	INTEGER,
			[questflag C]	INTEGER,
			[questsellmult A]	INTEGER,
			[questsellmult B]	INTEGER,
			[questsellmult C]	INTEGER,
			[questbuymult A]	INTEGER,
			[questbuymult B]	INTEGER,
			[questbuymult C]	INTEGER,
			[questrepmult A]	INTEGER,
			[questrepmult B]	INTEGER,
			[questrepmult C]	INTEGER,
			[max buy]	INTEGER,
			[max buy (N)]	INTEGER,
			[max buy (H)]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | objects] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (64),
			[iPadding16]	INTEGER,
			[iPadding17]	INTEGER,
			[iPadding18]	INTEGER,
			[iPadding19]	INTEGER,
			[iPadding20]	INTEGER,
			[iPadding21]	INTEGER,
			[iPadding22]	INTEGER,
			[iPadding23]	INTEGER,
			[iPadding24]	INTEGER,
			[iPadding25]	INTEGER,
			[iPadding26]	INTEGER,
			[iPadding27]	INTEGER,
			[iPadding28]	INTEGER,
			[iPadding29]	INTEGER,
			[iPadding30]	INTEGER,
			[iPadding31]	INTEGER,
			[iPadding32]	INTEGER,
			[iPadding33]	INTEGER,
			[iPadding34]	INTEGER,
			[iPadding35]	INTEGER,
			[iPadding36]	INTEGER,
			[iPadding37]	INTEGER,
			[iPadding38]	INTEGER,
			[iPadding39]	INTEGER,
			[iPadding40]	INTEGER,
			[iPadding41]	INTEGER,
			[iPadding42]	INTEGER,
			[iPadding43]	INTEGER,
			[iPadding44]	INTEGER,
			[iPadding45]	INTEGER,
			[iPadding46]	INTEGER,
			[iPadding47]	INTEGER,
			[Token]	STRING (3),
			[SpawnMax]	INTEGER,
			[Selectable0]	INTEGER,
			[Selectable1]	INTEGER,
			[Selectable2]	INTEGER,
			[Selectable3]	INTEGER,
			[Selectable4]	INTEGER,
			[Selectable5]	INTEGER,
			[Selectable6]	INTEGER,
			[Selectable7]	INTEGER,
			[TrapProb]	INTEGER,
			[SizeX]	INTEGER,
			[SizeY]	INTEGER,
			[FrameCnt0]	INTEGER,
			[FrameCnt1]	INTEGER,
			[FrameCnt2]	INTEGER,
			[FrameCnt3]	INTEGER,
			[FrameCnt4]	INTEGER,
			[FrameCnt5]	INTEGER,
			[FrameCnt6]	INTEGER,
			[FrameCnt7]	INTEGER,
			[FrameDelta0]	INTEGER,
			[FrameDelta1]	INTEGER,
			[FrameDelta2]	INTEGER,
			[FrameDelta3]	INTEGER,
			[FrameDelta4]	INTEGER,
			[FrameDelta5]	INTEGER,
			[FrameDelta6]	INTEGER,
			[FrameDelta7]	INTEGER,
			[CycleAnim0]	INTEGER,
			[CycleAnim1]	INTEGER,
			[CycleAnim2]	INTEGER,
			[CycleAnim3]	INTEGER,
			[CycleAnim4]	INTEGER,
			[CycleAnim5]	INTEGER,
			[CycleAnim6]	INTEGER,
			[CycleAnim7]	INTEGER,
			[Lit0]	INTEGER,
			[Lit1]	INTEGER,
			[Lit2]	INTEGER,
			[Lit3]	INTEGER,
			[Lit4]	INTEGER,
			[Lit5]	INTEGER,
			[Lit6]	INTEGER,
			[Lit7]	INTEGER,
			[BlocksLight0]	INTEGER,
			[BlocksLight1]	INTEGER,
			[BlocksLight2]	INTEGER,
			[BlocksLight3]	INTEGER,
			[BlocksLight4]	INTEGER,
			[BlocksLight5]	INTEGER,
			[BlocksLight6]	INTEGER,
			[BlocksLight7]	INTEGER,
			[HasCollision0]	INTEGER,
			[HasCollision1]	INTEGER,
			[HasCollision2]	INTEGER,
			[HasCollision3]	INTEGER,
			[HasCollision4]	INTEGER,
			[HasCollision5]	INTEGER,
			[HasCollision6]	INTEGER,
			[HasCollision7]	INTEGER,
			[IsAttackable0]	INTEGER,
			[Start0]	INTEGER,
			[Start1]	INTEGER,
			[Start2]	INTEGER,
			[Start3]	INTEGER,
			[Start4]	INTEGER,
			[Start5]	INTEGER,
			[Start6]	INTEGER,
			[Start7]	INTEGER,
			[OrderFlag0]	INTEGER,
			[OrderFlag1]	INTEGER,
			[OrderFlag2]	INTEGER,
			[OrderFlag3]	INTEGER,
			[OrderFlag4]	INTEGER,
			[OrderFlag5]	INTEGER,
			[OrderFlag6]	INTEGER,
			[OrderFlag7]	INTEGER,
			[EnvEffect]	INTEGER,
			[IsDoor]	INTEGER,
			[BlocksVis]	INTEGER,
			[Orientation]	INTEGER,
			[PreOperate]	INTEGER,
			[Trans]	INTEGER,
			[Mode0]	INTEGER,
			[Mode1]	INTEGER,
			[Mode2]	INTEGER,
			[Mode3]	INTEGER,
			[Mode4]	INTEGER,
			[Mode5]	INTEGER,
			[Mode6]	INTEGER,
			[Mode7]	INTEGER,
			[iPadding81]	INTEGER,
			[Xoffset]	INTEGER,
			[Yoffset]	INTEGER,
			[Draw]	INTEGER,
			[HD]	INTEGER,
			[TR]	INTEGER,
			[LG]	INTEGER,
			[RA]	INTEGER,
			[LA]	INTEGER,
			[RH]	INTEGER,
			[LH]	INTEGER,
			[SH]	INTEGER,
			[S1]	INTEGER,
			[S2]	INTEGER,
			[S3]	INTEGER,
			[S4]	INTEGER,
			[S5]	INTEGER,
			[S6]	INTEGER,
			[S7]	INTEGER,
			[S8]	INTEGER,
			[TotalPieces]	INTEGER,
			[Xspace]	INTEGER,
			[Yspace]	INTEGER,
			[Red]	INTEGER,
			[Green]	INTEGER,
			[Blue]	INTEGER,
			[SubClass]	INTEGER,
			[NameOffset]	INTEGER,
			[iPadding91]	INTEGER,
			[MonsterOK]	INTEGER,
			[OperateRange]	INTEGER,
			[ShrineFunction]	INTEGER,
			[Act]	INTEGER,
			[Lockable]	INTEGER,
			[Gore]	INTEGER,
			[Restore]	INTEGER,
			[RestoreVirgins]	INTEGER,
			[Sync]	INTEGER,
			[iPadding93_1]	STRING (2),
			[Parm0]	INTEGER,
			[Parm1]	INTEGER,
			[Parm2]	INTEGER,
			[Parm3]	INTEGER,
			[Parm4]	INTEGER,
			[Parm5]	INTEGER,
			[Parm6]	INTEGER,
			[Parm7]	INTEGER,
			[nTgtFX]	INTEGER,
			[nTgtFY]	INTEGER,
			[nTgtBX]	INTEGER,
			[nTgtBY]	INTEGER,
			[Damage]	INTEGER,
			[CollisionSubst]	INTEGER,
			[iPadding103]	INTEGER,
			[Left]	INTEGER,
			[Top]	INTEGER,
			[Width]	INTEGER,
			[Height]	INTEGER,
			[Beta]	INTEGER,
			[InitFn]	INTEGER,
			[PopulateFn]	INTEGER,
			[OperateFn]	INTEGER,
			[ClientFn]	INTEGER,
			[Overlay]	INTEGER,
			[BlockMissile]	INTEGER,
			[DrawUnder]	INTEGER,
			[OpenWarp]	INTEGER,
			[AutoMap]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | objgroup] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[ID0]	INTEGER,
			[ID1]	INTEGER,
			[ID2]	INTEGER,
			[ID3]	INTEGER,
			[ID4]	INTEGER,
			[ID5]	INTEGER,
			[ID6]	INTEGER,
			[ID7]	INTEGER,
			[DENSITY0]	INTEGER,
			[DENSITY1]	INTEGER,
			[DENSITY2]	INTEGER,
			[DENSITY3]	INTEGER,
			[DENSITY4]	INTEGER,
			[DENSITY5]	INTEGER,
			[DENSITY6]	INTEGER,
			[DENSITY7]	INTEGER,
			[PROB0]	INTEGER,
			[PROB1]	INTEGER,
			[PROB2]	INTEGER,
			[PROB3]	INTEGER,
			[PROB4]	INTEGER,
			[PROB5]	INTEGER,
			[PROB6]	INTEGER,
			[PROB7]	INTEGER,
			[SHRINES]	INTEGER,
			[WELLS]	INTEGER,
			[iPadding12]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | objtype] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[Token]	STRING (20)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | overlay] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Filename]	STRING (64),
			[version]	INTEGER,
			[Frames]	INTEGER,
			[PreDraw]	INTEGER,
			[1ofN]	INTEGER,
			[Dir]	INTEGER,
			[Open]	INTEGER,
			[Beta]	INTEGER,
			[Xoffset]	INTEGER,
			[Yoffset]	INTEGER,
			[Height1]	INTEGER,
			[Height2]	INTEGER,
			[Height3]	INTEGER,
			[Height4]	INTEGER,
			[AnimRate]	INTEGER,
			[InitRadius]	INTEGER,
			[Radius]	INTEGER,
			[LoopWaitTime]	INTEGER,
			[Trans]	INTEGER,
			[Red]	INTEGER,
			[Green]	INTEGER,
			[Blue]	INTEGER,
			[NumDirections]	INTEGER,
			[LocalBlood]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | plrmode] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[Token]	STRING (20)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | plrtype] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (32),
			[Token]	STRING (20)
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | properties] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[code]	INTEGER,
			[set1]	INTEGER,
			[set2]	INTEGER,
			[set3]	INTEGER,
			[set4]	INTEGER,
			[set5]	INTEGER,
			[set6]	INTEGER,
			[set7]	INTEGER,
			[iPadding2]	INTEGER,
			[val1]	INTEGER,
			[val2]	INTEGER,
			[val3]	INTEGER,
			[val4]	INTEGER,
			[val5]	INTEGER,
			[val6]	INTEGER,
			[val7]	INTEGER,
			[func1]	INTEGER,
			[func2]	INTEGER,
			[func3]	INTEGER,
			[func4]	INTEGER,
			[func5]	INTEGER,
			[func6]	INTEGER,
			[func7]	INTEGER,
			[iPadding7]	INTEGER,
			[stat1]	INTEGER,
			[stat2]	INTEGER,
			[stat3]	INTEGER,
			[stat4]	INTEGER,
			[stat5]	INTEGER,
			[stat6]	INTEGER,
			[stat7]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | qualityitems] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[armor]	INTEGER,
			[weapon]	INTEGER,
			[shield]	INTEGER,
			[scepter]	INTEGER,
			[wand]	INTEGER,
			[staff]	INTEGER,
			[bow]	INTEGER,
			[boots]	INTEGER,
			[gloves]	INTEGER,
			[belt]	INTEGER,
			[nummods]	INTEGER,
			[iPadding2]	INTEGER,
			[mod1code]	INTEGER,
			[mod1param]	INTEGER,
			[mod1min]	INTEGER,
			[mod1max]	INTEGER,
			[mod2code]	INTEGER,
			[mod2param]	INTEGER,
			[mod2min]	INTEGER,
			[mod2max]	INTEGER,
			[effect1]	STRING (32),
			[effect2]	STRING (32),
			[iPadding27]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | rareprefix] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[iPadding0]	INTEGER,
			[iPadding1]	INTEGER,
			[iPadding2]	INTEGER,
			[iPadding3]	INTEGER,
			[version]	INTEGER,
			[itype1]	INTEGER,
			[itype2]	INTEGER,
			[itype3]	INTEGER,
			[itype4]	INTEGER,
			[itype5]	INTEGER,
			[itype6]	INTEGER,
			[itype7]	INTEGER,
			[etype1]	INTEGER,
			[etype2]	INTEGER,
			[etype3]	INTEGER,
			[etype4]	INTEGER,
			[name]	STRING (32),
			[iPadding17]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | raresuffix] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[iPadding0]	INTEGER,
			[iPadding1]	INTEGER,
			[iPadding2]	INTEGER,
			[iPadding3]	INTEGER,
			[version]	INTEGER,
			[itype1]	INTEGER,
			[itype2]	INTEGER,
			[itype3]	INTEGER,
			[itype4]	INTEGER,
			[itype5]	INTEGER,
			[itype6]	INTEGER,
			[itype7]	INTEGER,
			[etype1]	INTEGER,
			[etype2]	INTEGER,
			[etype3]	INTEGER,
			[etype4]	INTEGER,
			[name]	STRING (32),
			[iPadding17]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | runes] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	STRING (64),
			[Rune Name]	STRING (64),
			[complete]	INTEGER,
			[server]	INTEGER,
			[iPadding32]	INTEGER,
			[iPadding33]	INTEGER,
			[itype1]	INTEGER,
			[itype2]	INTEGER,
			[itype3]	INTEGER,
			[itype4]	INTEGER,
			[itype5]	INTEGER,
			[itype6]	INTEGER,
			[etype1]	INTEGER,
			[etype2]	INTEGER,
			[etype3]	INTEGER,
			[Rune1]	INTEGER,
			[Rune2]	INTEGER,
			[Rune3]	INTEGER,
			[Rune4]	INTEGER,
			[Rune5]	INTEGER,
			[Rune6]	INTEGER,
			[T1Code1]	INTEGER,
			[T1Param1]	INTEGER,
			[T1Min1]	INTEGER,
			[T1Max1]	INTEGER,
			[T1Code2]	INTEGER,
			[T1Param2]	INTEGER,
			[T1Min2]	INTEGER,
			[T1Max2]	INTEGER,
			[T1Code3]	INTEGER,
			[T1Param3]	INTEGER,
			[T1Min3]	INTEGER,
			[T1Max3]	INTEGER,
			[T1Code4]	INTEGER,
			[T1Param4]	INTEGER,
			[T1Min4]	INTEGER,
			[T1Max4]	INTEGER,
			[T1Code5]	INTEGER,
			[T1Param5]	INTEGER,
			[T1Min5]	INTEGER,
			[T1Max5]	INTEGER,
			[T1Code6]	INTEGER,
			[T1Param6]	INTEGER,
			[T1Min6]	INTEGER,
			[T1Max6]	INTEGER,
			[T1Code7]	INTEGER,
			[T1Param7]	INTEGER,
			[T1Min7]	INTEGER,
			[T1Max7]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | setitems] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[wSetItemId]	INTEGER,
			[index]	STRING (32),
			[iPadding8]	INTEGER,
			[dwTblIndex]	INTEGER,
			[item]	STRING (4),
			[set]	INTEGER,
			[lvl]	INTEGER,
			[lvl req]	INTEGER,
			[rarity]	INTEGER,
			[cost mult]	INTEGER,
			[cost add]	INTEGER,
			[chrtransform]	INTEGER,
			[invtransform]	INTEGER,
			[flippyfile]	STRING (32),
			[invfile]	STRING (32),
			[dropsound]	INTEGER,
			[usesound]	INTEGER,
			[dropsfxframe]	INTEGER,
			[add func]	INTEGER,
			[prop1]	INTEGER,
			[par1]	INTEGER,
			[min1]	INTEGER,
			[max1]	INTEGER,
			[prop2]	INTEGER,
			[par2]	INTEGER,
			[min2]	INTEGER,
			[max2]	INTEGER,
			[prop3]	INTEGER,
			[par3]	INTEGER,
			[min3]	INTEGER,
			[max3]	INTEGER,
			[prop4]	INTEGER,
			[par4]	INTEGER,
			[min4]	INTEGER,
			[max4]	INTEGER,
			[prop5]	INTEGER,
			[par5]	INTEGER,
			[min5]	INTEGER,
			[max5]	INTEGER,
			[prop6]	INTEGER,
			[par6]	INTEGER,
			[min6]	INTEGER,
			[max6]	INTEGER,
			[prop7]	INTEGER,
			[par7]	INTEGER,
			[min7]	INTEGER,
			[max7]	INTEGER,
			[prop8]	INTEGER,
			[par8]	INTEGER,
			[min8]	INTEGER,
			[max8]	INTEGER,
			[prop9]	INTEGER,
			[par9]	INTEGER,
			[min9]	INTEGER,
			[max9]	INTEGER,
			[aprop1a]	INTEGER,
			[apar1a]	INTEGER,
			[amin1a]	INTEGER,
			[amax1a]	INTEGER,
			[aprop1b]	INTEGER,
			[apar1b]	INTEGER,
			[amin1b]	INTEGER,
			[amax1b]	INTEGER,
			[aprop2a]	INTEGER,
			[apar2a]	INTEGER,
			[amin2a]	INTEGER,
			[amax2a]	INTEGER,
			[aprop2b]	INTEGER,
			[apar2b]	INTEGER,
			[amin2b]	INTEGER,
			[amax2b]	INTEGER,
			[aprop3a]	INTEGER,
			[apar3a]	INTEGER,
			[amin3a]	INTEGER,
			[amax3a]	INTEGER,
			[aprop3b]	INTEGER,
			[apar3b]	INTEGER,
			[amin3b]	INTEGER,
			[amax3b]	INTEGER,
			[aprop4a]	INTEGER,
			[apar4a]	INTEGER,
			[amin4a]	INTEGER,
			[amax4a]	INTEGER,
			[aprop4b]	INTEGER,
			[apar4b]	INTEGER,
			[amin4b]	INTEGER,
			[amax4b]	INTEGER,
			[aprop5a]	INTEGER,
			[apar5a]	INTEGER,
			[amin5a]	INTEGER,
			[amax5a]	INTEGER,
			[aprop5b]	INTEGER,
			[apar5b]	INTEGER,
			[amin5b]	INTEGER,
			[amax5b]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | sets] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[wSetId]	INTEGER,
			[name]	INTEGER,
			[version]	INTEGER,
			[iPadding2]	INTEGER,
			[dwSetItems]	INTEGER,
			[PCode2a]	INTEGER,
			[PParam2a]	INTEGER,
			[PMin2a]	INTEGER,
			[PMax2a]	INTEGER,
			[PCode2b]	INTEGER,
			[PParam2b]	INTEGER,
			[PMin2b]	INTEGER,
			[PMax2b]	INTEGER,
			[PCode3a]	INTEGER,
			[PParam3a]	INTEGER,
			[PMin3a]	INTEGER,
			[PMax3a]	INTEGER,
			[PCode3b]	INTEGER,
			[PParam3b]	INTEGER,
			[PMin3b]	INTEGER,
			[PMax3b]	INTEGER,
			[PCode4a]	INTEGER,
			[PParam4a]	INTEGER,
			[PMin4a]	INTEGER,
			[PMax4a]	INTEGER,
			[PCode4b]	INTEGER,
			[PParam4b]	INTEGER,
			[PMin4b]	INTEGER,
			[PMax4b]	INTEGER,
			[PCode5a]	INTEGER,
			[PParam5a]	INTEGER,
			[PMin5a]	INTEGER,
			[PMax5a]	INTEGER,
			[PCode5b]	INTEGER,
			[PParam5b]	INTEGER,
			[PMin5b]	INTEGER,
			[PMax5b]	INTEGER,
			[FCode1]	INTEGER,
			[FParam1]	INTEGER,
			[FMin1]	INTEGER,
			[FMax1]	INTEGER,
			[FCode2]	INTEGER,
			[FParam2]	INTEGER,
			[FMin2]	INTEGER,
			[FMax2]	INTEGER,
			[FCode3]	INTEGER,
			[FParam3]	INTEGER,
			[FMin3]	INTEGER,
			[FMax3]	INTEGER,
			[FCode4]	INTEGER,
			[FParam4]	INTEGER,
			[FMin4]	INTEGER,
			[FMax4]	INTEGER,
			[FCode5]	INTEGER,
			[FParam5]	INTEGER,
			[FMin5]	INTEGER,
			[FMax5]	INTEGER,
			[FCode6]	INTEGER,
			[FParam6]	INTEGER,
			[FMin6]	INTEGER,
			[FMax6]	INTEGER,
			[FCode7]	INTEGER,
			[FParam7]	INTEGER,
			[FMin7]	INTEGER,
			[FMax7]	INTEGER,
			[FCode8]	INTEGER,
			[FParam8]	INTEGER,
			[FMin8]	INTEGER,
			[FMax8]	INTEGER,
			[iPadding68]	INTEGER,
			[iPadding69]	INTEGER,
			[iPadding70]	INTEGER,
			[iPadding71]	INTEGER,
			[iPadding72]	INTEGER,
			[iPadding73]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | shrines] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Code]	INTEGER,
			[Arg0]	INTEGER,
			[Arg1]	INTEGER,
			[Duration in frames]	INTEGER,
			[reset time in minutes]	INTEGER,
			[rarity]	INTEGER,
			[view name]	STRING (32),
			[niftyphrase]	STRING (32),
			[iPadding20]	INTEGER,
			[iPadding21]	INTEGER,
			[iPadding22]	INTEGER,
			[iPadding23]	INTEGER,
			[iPadding24]	INTEGER,
			[iPadding25]	INTEGER,
			[iPadding26]	INTEGER,
			[iPadding27]	INTEGER,
			[iPadding28]	INTEGER,
			[iPadding29]	INTEGER,
			[iPadding30]	INTEGER,
			[iPadding31]	INTEGER,
			[iPadding32]	INTEGER,
			[iPadding33]	INTEGER,
			[iPadding34]	INTEGER,
			[iPadding35]	INTEGER,
			[iPadding36]	INTEGER,
			[iPadding37]	INTEGER,
			[iPadding38]	INTEGER,
			[iPadding39]	INTEGER,
			[iPadding40]	INTEGER,
			[iPadding41]	INTEGER,
			[iPadding42]	INTEGER,
			[iPadding43]	INTEGER,
			[iPadding44]	INTEGER,
			[effectclass]	INTEGER,
			[LevelMin]	INTEGER,
			[iPadding45]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | skilldesc] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[SkillDesc]	INTEGER,
			[SkillPage]	INTEGER,
			[SkillRow]	INTEGER,
			[SkillColumn]	INTEGER,
			[ListRow]	INTEGER,
			[ListPool]	INTEGER,
			[IconCel]	INTEGER,
			[str name]	INTEGER,
			[str short]	INTEGER,
			[str long]	INTEGER,
			[str alt]	INTEGER,
			[str mana]	INTEGER,
			[descdam]	INTEGER,
			[descatt]	INTEGER,
			[acPadding20_1]	INTEGER,
			[acPadding20_2]	INTEGER,
			[ddam calc1]	INTEGER,
			[ddam calc2]	INTEGER,
			[p1dmelem]	INTEGER,
			[p2dmelem]	INTEGER,
			[p3dmelem]	INTEGER,
			[acPadding2]	INTEGER,
			[p1dmmin]	INTEGER,
			[p2dmmin]	INTEGER,
			[p3dmmin]	INTEGER,
			[p1dmmax]	INTEGER,
			[p2dmmax]	INTEGER,
			[p3dmmax]	INTEGER,
			[descmissile1]	INTEGER,
			[descmissile2]	INTEGER,
			[descmissile3]	INTEGER,
			[descline1]	INTEGER,
			[descline2]	INTEGER,
			[descline3]	INTEGER,
			[descline4]	INTEGER,
			[descline5]	INTEGER,
			[descline6]	INTEGER,
			[dsc2line1]	INTEGER,
			[dsc2line2]	INTEGER,
			[dsc2line3]	INTEGER,
			[dsc2line4]	INTEGER,
			[dsc3line1]	INTEGER,
			[dsc3line2]	INTEGER,
			[dsc3line3]	INTEGER,
			[dsc3line4]	INTEGER,
			[dsc3line5]	INTEGER,
			[dsc3line6]	INTEGER,
			[dsc3line7]	INTEGER,
			[bPadding20]	INTEGER,
			[desctexta1]	INTEGER,
			[desctexta2]	INTEGER,
			[desctexta3]	INTEGER,
			[desctexta4]	INTEGER,
			[desctexta5]	INTEGER,
			[desctexta6]	INTEGER,
			[dsc2texta1]	INTEGER,
			[dsc2texta2]	INTEGER,
			[dsc2texta3]	INTEGER,
			[dsc2texta4]	INTEGER,
			[dsc3texta1]	INTEGER,
			[dsc3texta2]	INTEGER,
			[dsc3texta3]	INTEGER,
			[dsc3texta4]	INTEGER,
			[dsc3texta5]	INTEGER,
			[dsc3texta6]	INTEGER,
			[dsc3texta7]	INTEGER,
			[desctextb1]	INTEGER,
			[desctextb2]	INTEGER,
			[desctextb3]	INTEGER,
			[desctextb4]	INTEGER,
			[desctextb5]	INTEGER,
			[desctextb6]	INTEGER,
			[dsc2textb1]	INTEGER,
			[dsc2textb2]	INTEGER,
			[dsc2textb3]	INTEGER,
			[dsc2textb4]	INTEGER,
			[dsc3textb1]	INTEGER,
			[dsc3textb2]	INTEGER,
			[dsc3textb3]	INTEGER,
			[dsc3textb4]	INTEGER,
			[dsc3textb5]	INTEGER,
			[dsc3textb6]	INTEGER,
			[dsc3textb7]	INTEGER,
			[desccalca1]	INTEGER,
			[desccalca2]	INTEGER,
			[desccalca3]	INTEGER,
			[desccalca4]	INTEGER,
			[desccalca5]	INTEGER,
			[desccalca6]	INTEGER,
			[dsc2calca1]	INTEGER,
			[dsc2calca2]	INTEGER,
			[dsc2calca3]	INTEGER,
			[dsc2calca4]	INTEGER,
			[dsc3calca1]	INTEGER,
			[dsc3calca2]	INTEGER,
			[dsc3calca3]	INTEGER,
			[dsc3calca4]	INTEGER,
			[dsc3calca5]	INTEGER,
			[dsc3calca6]	INTEGER,
			[dsc3calca7]	INTEGER,
			[desccalcb1]	INTEGER,
			[desccalcb2]	INTEGER,
			[desccalcb3]	INTEGER,
			[desccalcb4]	INTEGER,
			[desccalcb5]	INTEGER,
			[desccalcb6]	INTEGER,
			[dsc2calcb1]	INTEGER,
			[dsc2calcb2]	INTEGER,
			[dsc2calcb3]	INTEGER,
			[dsc2calcb4]	INTEGER,
			[dsc3calcb1]	INTEGER,
			[dsc3calcb2]	INTEGER,
			[dsc3calcb3]	INTEGER,
			[dsc3calcb4]	INTEGER,
			[dsc3calcb5]	INTEGER,
			[dsc3calcb6]	INTEGER,
			[dsc3calcb7]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | sounds] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Index]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | superuniques] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[wHcIdx]	INTEGER,
			[Name]	INTEGER,
			[Class]	INTEGER,
			[hcIdx]	INTEGER,
			[Mod1]	INTEGER,
			[Mod2]	INTEGER,
			[Mod3]	INTEGER,
			[MonSound]	INTEGER,
			[MinGrp]	INTEGER,
			[MaxGrp]	INTEGER,
			[AutoPos]	INTEGER,
			[EClass]	INTEGER,
			[Stacks]	INTEGER,
			[Replaceable]	INTEGER,
			[Utrans]	INTEGER,
			[Utrans(N)]	INTEGER,
			[Utrans(H)]	INTEGER,
			[iPadding10]	INTEGER,
			[TC]	INTEGER,
			[TC(N)]	INTEGER,
			[TC(H)]	INTEGER,
			[iPadding12]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | treasureclassex] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Picks]	INTEGER,
			[group]	INTEGER,
			[level]	INTEGER,
			[Magic]	INTEGER,
			[Rare]	INTEGER,
			[Set]	INTEGER,
			[Unique]	INTEGER,
			[iPadding12]	INTEGER,
			[NoDrop]	INTEGER,
			[Prob1]	INTEGER,
			[Prob2]	INTEGER,
			[Prob3]	INTEGER,
			[Prob4]	INTEGER,
			[Prob5]	INTEGER,
			[Prob6]	INTEGER,
			[Prob7]	INTEGER,
			[Prob8]	INTEGER,
			[Prob9]	INTEGER,
			[Prob10]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | uniqueappellation] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | uniqueprefix] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | uniquesuffix] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | uniquetitle] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[Name]	INTEGER
		`);
	)
	retObj.push(pushDB)

	pushDB = 
	(
		CREATE TABLE [Decompile | weapons] (
			[ModID]	INTEGER,
			[RecordID]	INTEGER,
			[flippyfile]	STRING (32),
			[invfile]	STRING (32),
			[uniqueinvfile]	STRING (32),
			[setinvfile]	STRING (32),
			[code]	STRING (4),
			[normcode]	STRING (4),
			[ubercode]	STRING (4),
			[ultracode]	STRING (4),
			[alternateGfx]	STRING (4),
			[iPadding37]	INTEGER,
			[iPadding38]	INTEGER,
			[iPadding39]	INTEGER,
			[iPadding40]	INTEGER,
			[iPadding41]	INTEGER,
			[iPadding42]	INTEGER,
			[iPadding43]	INTEGER,
			[iPadding44]	INTEGER,
			[iPadding45]	INTEGER,
			[iPadding46]	INTEGER,
			[iPadding47]	INTEGER,
			[wclass]	STRING (4),
			[2handedwclass]	STRING (4),
			[iPadding50]	INTEGER,
			[iPadding51]	INTEGER,
			[iPadding52]	INTEGER,
			[gamble cost]	INTEGER,
			[speed]	INTEGER,
			[iPadding54]	STRING (2),
			[bitfield1]	INTEGER,
			[iPadding55]	STRING (3),
			[cost]	INTEGER,
			[minstack]	INTEGER,
			[maxstack]	INTEGER,
			[spawnstack]	INTEGER,
			[gemoffset]	INTEGER,
			[iPadding60]	STRING (3),
			[namestr]	INTEGER,
			[version]	INTEGER,
			[auto prefix]	INTEGER,
			[missiletype]	INTEGER,
			[rarity]	INTEGER,
			[level]	INTEGER,
			[mindam]	INTEGER,
			[maxdam]	INTEGER,
			[minmisdam]	INTEGER,
			[maxmisdam]	INTEGER,
			[2handmindam]	INTEGER,
			[2handmaxdam]	INTEGER,
			[rangeadder]	INTEGER,
			[StrBonus]	INTEGER,
			[DexBonus]	INTEGER,
			[reqstr]	INTEGER,
			[reqdex]	INTEGER,
			[iPadding67]	INTEGER,
			[invwidth]	INTEGER,
			[invheight]	INTEGER,
			[iPadding68]	INTEGER,
			[durability]	INTEGER,
			[nodurability]	INTEGER,
			[iPadding69]	INTEGER,
			[component]	INTEGER,
			[iPadding69_1]	STRING (2),
			[iPadding70]	INTEGER,
			[2handed]	INTEGER,
			[useable]	INTEGER,
			[type]	INTEGER,
			[type2]	INTEGER,
			[iPadding72]	INTEGER,
			[dropsound]	INTEGER,
			[usesound]	INTEGER,
			[dropsfxframe]	INTEGER,
			[unique]	INTEGER,
			[quest]	INTEGER,
			[questdiffcheck]	INTEGER,
			[transparent]	INTEGER,
			[transtbl]	INTEGER,
			[iPadding75]	INTEGER,
			[lightradius]	INTEGER,
			[belt]	INTEGER,
			[iPadding76]	INTEGER,
			[stackable]	INTEGER,
			[spawnable]	INTEGER,
			[iPadding77]	INTEGER,
			[durwarning]	INTEGER,
			[qntwarning]	INTEGER,
			[hasinv]	INTEGER,
			[gemsockets]	INTEGER,
			[iPadding78]	STRING (3),
			[hit class]	INTEGER,
			[1or2handed]	INTEGER,
			[gemapplytype]	INTEGER,
			[levelreq]	INTEGER,
			[magic lvl]	INTEGER,
			[Transform]	INTEGER,
			[InvTrans]	INTEGER,
			[compactsave]	INTEGER,
			[SkipName]	INTEGER,
			[Nameable]	INTEGER,
			[AkaraMin]	INTEGER,
			[GheedMin]	INTEGER,
			[CharsiMin]	INTEGER,
			[FaraMin]	INTEGER,
			[LysanderMin]	INTEGER,
			[DrognanMin]	INTEGER,
			[HraltiMin]	INTEGER,
			[AlkorMin]	INTEGER,
			[OrmusMin]	INTEGER,
			[ElzixMin]	INTEGER,
			[AshearaMin]	INTEGER,
			[CainMin]	INTEGER,
			[HalbuMin]	INTEGER,
			[JamellaMin]	INTEGER,
			[MalahMin]	INTEGER,
			[LarzukMin]	INTEGER,
			[DrehyaMin]	INTEGER,
			[AkaraMax]	INTEGER,
			[GheedMax]	INTEGER,
			[CharsiMax]	INTEGER,
			[FaraMax]	INTEGER,
			[LysanderMax]	INTEGER,
			[DrognanMax]	INTEGER,
			[HraltiMax]	INTEGER,
			[AlkorMax]	INTEGER,
			[OrmusMax]	INTEGER,
			[ElzixMax]	INTEGER,
			[AshearaMax]	INTEGER,
			[CainMax]	INTEGER,
			[HalbuMax]	INTEGER,
			[JamellaMax]	INTEGER,
			[MalahMax]	INTEGER,
			[LarzukMax]	INTEGER,
			[DrehyaMax]	INTEGER,
			[AkaraMagicMin]	INTEGER,
			[GheedMagicMin]	INTEGER,
			[CharsiMagicMin]	INTEGER,
			[FaraMagicMin]	INTEGER,
			[LysanderMagicMin]	INTEGER,
			[DrognanMagicMin]	INTEGER,
			[HraltiMagicMin]	INTEGER,
			[AlkorMagicMin]	INTEGER,
			[OrmusMagicMin]	INTEGER,
			[ElzixMagicMin]	INTEGER,
			[AshearaMagicMin]	INTEGER,
			[CainMagicMin]	INTEGER,
			[HalbuMagicMin]	INTEGER,
			[JamellaMagicMin]	INTEGER,
			[MalahMagicMin]	INTEGER,
			[LarzukMagicMin]	INTEGER,
			[DrehyaMagicMin]	INTEGER,
			[AkaraMagicMax]	INTEGER,
			[GheedMagicMax]	INTEGER,
			[CharsiMagicMax]	INTEGER,
			[FaraMagicMax]	INTEGER,
			[LysanderMagicMax]	INTEGER,
			[DrognanMagicMax]	INTEGER,
			[HraltiMagicMax]	INTEGER,
			[AlkorMagicMax]	INTEGER,
			[OrmusMagicMax]	INTEGER,
			[ElzixMagicMax]	INTEGER,
			[AshearaMagicMax]	INTEGER,
			[CainMagicMax]	INTEGER,
			[HalbuMagicMax]	INTEGER,
			[JamellaMagicMax]	INTEGER,
			[MalahMagicMax]	INTEGER,
			[LarzukMagicMax]	INTEGER,
			[DrehyaMagicMax]	INTEGER,
			[AkaraMagicLvl]	INTEGER,
			[GheedMagicLvl]	INTEGER,
			[CharsiMagicLvl]	INTEGER,
			[FaraMagicLvl]	INTEGER,
			[LysanderMagicLvl]	INTEGER,
			[DrognanMagicLvl]	INTEGER,
			[HraltiMagicLvl]	INTEGER,
			[AlkorMagicLvl]	INTEGER,
			[OrmusMagicLvl]	INTEGER,
			[ElzixMagicLvl]	INTEGER,
			[AshearaMagicLvl]	INTEGER,
			[CainMagicLvl]	INTEGER,
			[HalbuMagicLvl]	INTEGER,
			[JamellaMagicLvl]	INTEGER,
			[MalahMagicLvl]	INTEGER,
			[LarzukMagicLvl]	INTEGER,
			[DrehyaMagicLvl]	INTEGER,
			[iPadding102]	INTEGER,
			[NightmareUpgrade]	STRING (4),
			[HellUpgrade]	STRING (4),
			[PermStoreItem]	INTEGER
		`);
	)
	retObj.push(pushDB)

